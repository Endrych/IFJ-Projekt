# 2017-12-02 16:01:33.035994
# SECTION: 04_expressions
# TEST: 27
# INFO: Divide priority (fail types)
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: 
# STATE: FAIL
# 
# COMPILER STDERR:
# 
# Everything is OK
# 
# INTERPRETER STDERR:
# Executing instruction: IJUMP at line: 2 with following arguments:
# Executing instruction: ILABEL at line: 118 with following arguments:
# Executing instruction: ICREATEFRAME at line: 119 with following arguments:
# Executing instruction: IPUSHFRAME at line: 120 with following arguments:
# Executing instruction: IDEFVAR at line: 121 with following arguments:
# Dest: LF@&a
# Executing instruction: IMOVE at line: 122 with following arguments:
# Arg1: Const@=100000(int)
# Dest: LF@&a()
# Executing instruction: IPUSHS at line: 123 with following arguments:
# Arg1: LF@&a=100000(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 124 with following arguments:
# Arg1: Stack@=100000(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 125 with following arguments:
# Arg1: Const@=3(int)
# Dest: LF@&a=100000(int)
# Executing instruction: IPUSHS at line: 126 with following arguments:
# Arg1: LF@&a=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 127 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 128 with following arguments:
# Arg1: Const@=4(int)
# Dest: LF@&a=3(int)
# Executing instruction: IPUSHS at line: 129 with following arguments:
# Arg1: LF@&a=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 130 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 131 with following arguments:
# Arg1: Stack@=3(double)
# Arg2: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 132 with following arguments:
# Arg1: Const@=4(int)
# Dest: LF@&a=4(int)
# Executing instruction: IPUSHS at line: 133 with following arguments:
# Arg1: LF@&a=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 134 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 135 with following arguments:
# Arg1: Const@=4(int)
# Dest: LF@&a=4(int)
# Executing instruction: IPUSHS at line: 136 with following arguments:
# Arg1: LF@&a=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 137 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 138 with following arguments:
# Arg1: Const@=6(int)
# Dest: LF@&a=4(int)
# Executing instruction: IPUSHS at line: 139 with following arguments:
# Arg1: LF@&a=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 140 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 141 with following arguments:
# Arg1: Stack@=4(double)
# Arg2: Stack@=6(double)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 142 with following arguments:
# Arg1: Stack@=4(double)
# Arg2: Stack@=0.6666666666666666(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2INTS at line: 143 with following arguments:
# Arg1: Stack@=6(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 144 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 145 with following arguments:
# Arg1: Stack@=0.75(double)
# Arg2: Stack@=6(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2INTS at line: 146 with following arguments:
# Arg1: Stack@=0.125(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 147 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 148 with following arguments:
# Arg1: Stack@=100000(double)
# Arg2: Stack@=0(double)
# Dest: Stack@()
# Error at line: 148
# Division by zero!
# 
# EXPECTED INTERPRETER STDOUT:

#  25000


# CURRENT INTERPRETER STDOUT:



# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 57
# PRICE: ---
# GROOT: ---
# 
#   1: ' Divide priority (fail types)
#   2: scope
#   3:     print 100000\(3/4)\4\(4/6);
#   4: end scope

########################################

.IFJcode17                                                                      #     1/152
JUMP $$main                                                                     #     2/152
LABEL $length                                                                   #     3/152
PUSHFRAME                                                                       #     4/152
DEFVAR LF@%retval                                                               #     5/152
MOVE LF@%retval int@0                                                           #     6/152
STRLEN LF@%retval LF@s                                                          #     7/152
LABEL $length$epilog                                                            #     8/152
POPFRAME                                                                        #     9/152
RETURN                                                                          #    10/152
LABEL $substr                                                                   #    11/152
PUSHFRAME                                                                       #    12/152
DEFVAR LF@%retval                                                               #    13/152
MOVE LF@%retval string@                                                         #    14/152
DEFVAR LF@tmp1                                                                  #    15/152
DEFVAR LF@tmp2                                                                  #    16/152
MOVE LF@tmp1 int@0                                                              #    17/152
MOVE LF@tmp2 string@                                                            #    18/152
SUB LF@tmp1 LF@i int@1                                                          #    19/152
DEFVAR LF@length                                                                #    20/152
MOVE LF@length int@0                                                            #    21/152
DEFVAR LF@result                                                                #    22/152
MOVE LF@result bool@false                                                       #    23/152
DEFVAR LF@tmplen                                                                #    24/152
MOVE LF@tmplen int@0                                                            #    25/152
STRLEN LF@tmplen LF@s                                                           #    26/152
SUB LF@tmplen LF@tmplen LF@i                                                    #    27/152
ADD LF@tmplen LF@tmplen int@1                                                   #    28/152
JUMPIFEQ $SubStrReturn0 LF@s LF@tmp2                                            #    29/152
PUSHS LF@i                                                                      #    30/152
PUSHS int@0                                                                     #    31/152
PUSHS LF@i                                                                      #    32/152
PUSHS int@0                                                                     #    33/152
EQS                                                                             #    34/152
POPS LF@result                                                                  #    35/152
LTS                                                                             #    36/152
PUSHS LF@result                                                                 #    37/152
ORS                                                                             #    38/152
POPS LF@result                                                                  #    39/152
JUMPIFEQ $SubStrReturn0 bool@true LF@result                                     #    40/152
PUSHS LF@n                                                                      #    41/152
PUSHS int@0                                                                     #    42/152
LTS                                                                             #    43/152
POPS LF@result                                                                  #    44/152
JUMPIFEQ $SubStrReturnRest bool@true LF@result                                  #    45/152
STRLEN LF@tmplen LF@s                                                           #    46/152
SUB LF@tmplen LF@tmplen LF@i                                                    #    47/152
ADD LF@tmplen LF@tmplen int@1                                                   #    48/152
PUSHS LF@tmplen                                                                 #    49/152
PUSHS LF@n                                                                      #    50/152
LTS                                                                             #    51/152
POPS LF@result                                                                  #    52/152
JUMPIFEQ $SubStrReturnRest bool@true LF@result                                  #    53/152
MOVE LF@tmplen int@0                                                            #    54/152
STRLEN LF@tmplen LF@s                                                           #    55/152
SUB LF@tmplen LF@tmplen LF@i                                                    #    56/152
LABEL $SubStrFor                                                                #    57/152
GETCHAR LF@tmp2 LF@s LF@tmp1                                                    #    58/152
CONCAT LF@%retval LF@%retval LF@tmp2                                            #    59/152
ADD LF@tmp1 LF@tmp1 int@1                                                       #    60/152
STRLEN LF@length LF@%retval                                                     #    61/152
JUMPIFNEQ $SubStrFor LF@length LF@n                                             #    62/152
JUMP $substr$epilog                                                             #    63/152
LABEL $SubStrReturn0                                                            #    64/152
MOVE LF@%retval string@                                                         #    65/152
JUMP $substr$epilog                                                             #    66/152
LABEL $SubStrReturnRest                                                         #    67/152
GETCHAR LF@tmp2 LF@s LF@tmp1                                                    #    68/152
CONCAT LF@%retval LF@%retval LF@tmp2                                            #    69/152
ADD LF@tmp1 LF@tmp1 int@1                                                       #    70/152
STRLEN LF@length LF@%retval                                                     #    71/152
JUMPIFNEQ $SubStrReturnRest LF@tmplen LF@length                                 #    72/152
LABEL $substr$epilog                                                            #    73/152
POPFRAME                                                                        #    74/152
RETURN                                                                          #    75/152
LABEL $asc                                                                      #    76/152
PUSHFRAME                                                                       #    77/152
DEFVAR LF@%retval                                                               #    78/152
MOVE LF@%retval int@0                                                           #    79/152
DEFVAR LF@result                                                                #    80/152
MOVE LF@result bool@false                                                       #    81/152
DEFVAR LF@tmp                                                                   #    82/152
DEFVAR LF@tmp2                                                                  #    83/152
MOVE LF@tmp string@                                                             #    84/152
MOVE LF@tmp2 int@0                                                              #    85/152
PUSHS LF@i                                                                      #    86/152
PUSHS int@0                                                                     #    87/152
PUSHS LF@i                                                                      #    88/152
PUSHS int@0                                                                     #    89/152
EQS                                                                             #    90/152
POPS LF@result                                                                  #    91/152
LTS                                                                             #    92/152
PUSHS LF@result                                                                 #    93/152
ORS                                                                             #    94/152
POPS LF@result                                                                  #    95/152
JUMPIFEQ $asc$epilog bool@true LF@result                                        #    96/152
PUSHS LF@i                                                                      #    97/152
STRLEN LF@tmp2 LF@s                                                             #    98/152
PUSHS LF@tmp2                                                                   #    99/152
GTS                                                                             #   100/152
POPS LF@result                                                                  #   101/152
JUMPIFEQ $asc$epilog bool@true LF@result                                        #   102/152
SUB LF@i LF@i int@1                                                             #   103/152
GETCHAR LF@tmp LF@s LF@i                                                        #   104/152
STRI2INT LF@%retval LF@tmp int@0                                                #   105/152
LABEL $asc$epilog                                                               #   106/152
POPFRAME                                                                        #   107/152
RETURN                                                                          #   108/152
LABEL $chr                                                                      #   109/152
PUSHFRAME                                                                       #   110/152
DEFVAR LF@%retval                                                               #   111/152
MOVE LF@%retval string@                                                         #   112/152
DEFVAR LF@tmp                                                                   #   113/152
MOVE LF@tmp string@                                                             #   114/152
INT2CHAR LF@%retval LF@i                                                        #   115/152
POPFRAME                                                                        #   116/152
RETURN                                                                          #   117/152
LABEL $$main                                                                    #   118/152
CREATEFRAME                                                                     #   119/152
PUSHFRAME                                                                       #   120/152
DEFVAR LF@&a                                                                    #   121/152
MOVE LF@&a int@100000                                                           #   122/152
PUSHS LF@&a                                                                     #   123/152
INT2FLOATS                                                                      #   124/152
MOVE LF@&a int@3                                                                #   125/152
PUSHS LF@&a                                                                     #   126/152
INT2FLOATS                                                                      #   127/152
MOVE LF@&a int@4                                                                #   128/152
PUSHS LF@&a                                                                     #   129/152
INT2FLOATS                                                                      #   130/152
DIVS                                                                            #   131/152
MOVE LF@&a int@4                                                                #   132/152
PUSHS LF@&a                                                                     #   133/152
INT2FLOATS                                                                      #   134/152
MOVE LF@&a int@4                                                                #   135/152
PUSHS LF@&a                                                                     #   136/152
INT2FLOATS                                                                      #   137/152
MOVE LF@&a int@6                                                                #   138/152
PUSHS LF@&a                                                                     #   139/152
INT2FLOATS                                                                      #   140/152
DIVS                                                                            #   141/152
DIVS                                                                            #   142/152
FLOAT2INTS                                                                      #   143/152
INT2FLOATS                                                                      #   144/152
DIVS                                                                            #   145/152
FLOAT2INTS                                                                      #   146/152
INT2FLOATS                                                                      #   147/152
DIVS                                                                            #   148/152
FLOAT2INTS                                                                      #   149/152
POPS LF@&a                                                                      #   150/152
WRITE LF@&a                                                                     #   151/152
POPFRAME                                                                        #   152/152

