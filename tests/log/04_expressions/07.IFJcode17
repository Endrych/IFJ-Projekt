# 2017-12-02 16:01:31.702274
# SECTION: 04_expressions
# TEST: 07
# INFO: multiple operations with different priorities II
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: 
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# Everything is OK
# 
# INTERPRETER STDERR:
# Executing instruction: IJUMP at line: 2 with following arguments:
# Executing instruction: ILABEL at line: 118 with following arguments:
# Executing instruction: ICREATEFRAME at line: 119 with following arguments:
# Executing instruction: IPUSHFRAME at line: 120 with following arguments:
# Executing instruction: IDEFVAR at line: 121 with following arguments:
# Dest: LF@a
# Executing instruction: IDEFVAR at line: 122 with following arguments:
# Dest: LF@&a
# Executing instruction: IMOVE at line: 123 with following arguments:
# Arg1: Const@=2(int)
# Dest: LF@&a()
# Executing instruction: IMOVE at line: 124 with following arguments:
# Arg1: LF@&a=2(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 125 with following arguments:
# Dest: LF@b
# Executing instruction: IDEFVAR at line: 126 with following arguments:
# Dest: LF@&b
# Executing instruction: IMOVE at line: 127 with following arguments:
# Arg1: Const@=16(int)
# Dest: LF@&b()
# Executing instruction: IMOVE at line: 128 with following arguments:
# Arg1: LF@&b=16(int)
# Dest: LF@b()
# Executing instruction: IDEFVAR at line: 129 with following arguments:
# Dest: LF@&c
# Executing instruction: IMOVE at line: 130 with following arguments:
# Arg1: LF@b=16(int)
# Dest: LF@&c()
# Executing instruction: IPUSHS at line: 131 with following arguments:
# Arg1: LF@&c=16(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 132 with following arguments:
# Arg1: Stack@=16(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 133 with following arguments:
# Arg1: LF@a=2(int)
# Dest: LF@&c=16(int)
# Executing instruction: IPUSHS at line: 134 with following arguments:
# Arg1: LF@&c=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 135 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 136 with following arguments:
# Arg1: Stack@=16(double)
# Arg2: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 137 with following arguments:
# Arg1: LF@a=2(int)
# Dest: LF@&c=2(int)
# Executing instruction: IPUSHS at line: 138 with following arguments:
# Arg1: LF@&c=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 139 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 140 with following arguments:
# Arg1: Stack@=8(double)
# Arg2: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 141 with following arguments:
# Arg1: LF@b=16(int)
# Dest: LF@&c=2(int)
# Executing instruction: IPUSHS at line: 142 with following arguments:
# Arg1: LF@&c=16(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 143 with following arguments:
# Arg1: Stack@=16(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 144 with following arguments:
# Arg1: Stack@=10(double)
# Arg2: Stack@=16(double)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 145 with following arguments:
# Arg1: Const@=100(int)
# Dest: LF@&c=16(int)
# Executing instruction: IPUSHS at line: 146 with following arguments:
# Arg1: LF@&c=100(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 147 with following arguments:
# Arg1: Stack@=100(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 148 with following arguments:
# Arg1: Stack@=-6(double)
# Arg2: Stack@=100(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 149 with following arguments:
# Arg1: Stack@=94(double)
# Dest: LF@&c=100(int)
# Executing instruction: IFLOAT2R2EINT at line: 150 with following arguments:
# Arg1: LF@&c=94(double)
# Dest: LF@&c=94(double)
# Executing instruction: IMOVE at line: 151 with following arguments:
# Arg1: LF@&c=94(int)
# Dest: LF@a=2(int)
# Executing instruction: IDEFVAR at line: 152 with following arguments:
# Dest: LF@&d
# Executing instruction: IMOVE at line: 153 with following arguments:
# Arg1: LF@a=94(int)
# Dest: LF@&d()
# Executing instruction: IWRITE at line: 154 with following arguments:
# Arg1: LF@&d=94(int)
# Executing instruction: IPOPFRAME at line: 155 with following arguments:
# Executing instruction: IGROOT at line: 157 with following arguments:
# I am Groot at 157 (249).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 249 (54+195)
# GROOT: 249
# 
#   1: ' multiple operations with different priorities II
#   2: scope
#   3:     dim a as integer = 2
#   4:     dim b as integer = 16
#   5:     a = b / a + a - b + 100
#   6:     print a;
#   7: end scope

########################################

.IFJcode17                                                                      #     1/155
JUMP $$main                                                                     #     2/155
LABEL $length                                                                   #     3/155
PUSHFRAME                                                                       #     4/155
DEFVAR LF@%retval                                                               #     5/155
MOVE LF@%retval int@0                                                           #     6/155
STRLEN LF@%retval LF@s                                                          #     7/155
LABEL $length$epilog                                                            #     8/155
POPFRAME                                                                        #     9/155
RETURN                                                                          #    10/155
LABEL $substr                                                                   #    11/155
PUSHFRAME                                                                       #    12/155
DEFVAR LF@%retval                                                               #    13/155
MOVE LF@%retval string@                                                         #    14/155
DEFVAR LF@tmp1                                                                  #    15/155
DEFVAR LF@tmp2                                                                  #    16/155
MOVE LF@tmp1 int@0                                                              #    17/155
MOVE LF@tmp2 string@                                                            #    18/155
SUB LF@tmp1 LF@i int@1                                                          #    19/155
DEFVAR LF@length                                                                #    20/155
MOVE LF@length int@0                                                            #    21/155
DEFVAR LF@result                                                                #    22/155
MOVE LF@result bool@false                                                       #    23/155
DEFVAR LF@tmplen                                                                #    24/155
MOVE LF@tmplen int@0                                                            #    25/155
STRLEN LF@tmplen LF@s                                                           #    26/155
SUB LF@tmplen LF@tmplen LF@i                                                    #    27/155
ADD LF@tmplen LF@tmplen int@1                                                   #    28/155
JUMPIFEQ $SubStrReturn0 LF@s LF@tmp2                                            #    29/155
PUSHS LF@i                                                                      #    30/155
PUSHS int@0                                                                     #    31/155
PUSHS LF@i                                                                      #    32/155
PUSHS int@0                                                                     #    33/155
EQS                                                                             #    34/155
POPS LF@result                                                                  #    35/155
LTS                                                                             #    36/155
PUSHS LF@result                                                                 #    37/155
ORS                                                                             #    38/155
POPS LF@result                                                                  #    39/155
JUMPIFEQ $SubStrReturn0 bool@true LF@result                                     #    40/155
PUSHS LF@n                                                                      #    41/155
PUSHS int@0                                                                     #    42/155
LTS                                                                             #    43/155
POPS LF@result                                                                  #    44/155
JUMPIFEQ $SubStrReturnRest bool@true LF@result                                  #    45/155
STRLEN LF@tmplen LF@s                                                           #    46/155
SUB LF@tmplen LF@tmplen LF@i                                                    #    47/155
ADD LF@tmplen LF@tmplen int@1                                                   #    48/155
PUSHS LF@tmplen                                                                 #    49/155
PUSHS LF@n                                                                      #    50/155
LTS                                                                             #    51/155
POPS LF@result                                                                  #    52/155
JUMPIFEQ $SubStrReturnRest bool@true LF@result                                  #    53/155
MOVE LF@tmplen int@0                                                            #    54/155
STRLEN LF@tmplen LF@s                                                           #    55/155
SUB LF@tmplen LF@tmplen LF@i                                                    #    56/155
LABEL $SubStrFor                                                                #    57/155
GETCHAR LF@tmp2 LF@s LF@tmp1                                                    #    58/155
CONCAT LF@%retval LF@%retval LF@tmp2                                            #    59/155
ADD LF@tmp1 LF@tmp1 int@1                                                       #    60/155
STRLEN LF@length LF@%retval                                                     #    61/155
JUMPIFNEQ $SubStrFor LF@length LF@n                                             #    62/155
JUMP $substr$epilog                                                             #    63/155
LABEL $SubStrReturn0                                                            #    64/155
MOVE LF@%retval string@                                                         #    65/155
JUMP $substr$epilog                                                             #    66/155
LABEL $SubStrReturnRest                                                         #    67/155
GETCHAR LF@tmp2 LF@s LF@tmp1                                                    #    68/155
CONCAT LF@%retval LF@%retval LF@tmp2                                            #    69/155
ADD LF@tmp1 LF@tmp1 int@1                                                       #    70/155
STRLEN LF@length LF@%retval                                                     #    71/155
JUMPIFNEQ $SubStrReturnRest LF@tmplen LF@length                                 #    72/155
LABEL $substr$epilog                                                            #    73/155
POPFRAME                                                                        #    74/155
RETURN                                                                          #    75/155
LABEL $asc                                                                      #    76/155
PUSHFRAME                                                                       #    77/155
DEFVAR LF@%retval                                                               #    78/155
MOVE LF@%retval int@0                                                           #    79/155
DEFVAR LF@result                                                                #    80/155
MOVE LF@result bool@false                                                       #    81/155
DEFVAR LF@tmp                                                                   #    82/155
DEFVAR LF@tmp2                                                                  #    83/155
MOVE LF@tmp string@                                                             #    84/155
MOVE LF@tmp2 int@0                                                              #    85/155
PUSHS LF@i                                                                      #    86/155
PUSHS int@0                                                                     #    87/155
PUSHS LF@i                                                                      #    88/155
PUSHS int@0                                                                     #    89/155
EQS                                                                             #    90/155
POPS LF@result                                                                  #    91/155
LTS                                                                             #    92/155
PUSHS LF@result                                                                 #    93/155
ORS                                                                             #    94/155
POPS LF@result                                                                  #    95/155
JUMPIFEQ $asc$epilog bool@true LF@result                                        #    96/155
PUSHS LF@i                                                                      #    97/155
STRLEN LF@tmp2 LF@s                                                             #    98/155
PUSHS LF@tmp2                                                                   #    99/155
GTS                                                                             #   100/155
POPS LF@result                                                                  #   101/155
JUMPIFEQ $asc$epilog bool@true LF@result                                        #   102/155
SUB LF@i LF@i int@1                                                             #   103/155
GETCHAR LF@tmp LF@s LF@i                                                        #   104/155
STRI2INT LF@%retval LF@tmp int@0                                                #   105/155
LABEL $asc$epilog                                                               #   106/155
POPFRAME                                                                        #   107/155
RETURN                                                                          #   108/155
LABEL $chr                                                                      #   109/155
PUSHFRAME                                                                       #   110/155
DEFVAR LF@%retval                                                               #   111/155
MOVE LF@%retval string@                                                         #   112/155
DEFVAR LF@tmp                                                                   #   113/155
MOVE LF@tmp string@                                                             #   114/155
INT2CHAR LF@%retval LF@i                                                        #   115/155
POPFRAME                                                                        #   116/155
RETURN                                                                          #   117/155
LABEL $$main                                                                    #   118/155
CREATEFRAME                                                                     #   119/155
PUSHFRAME                                                                       #   120/155
DEFVAR LF@a                                                                     #   121/155
DEFVAR LF@&a                                                                    #   122/155
MOVE LF@&a int@2                                                                #   123/155
MOVE LF@a LF@&a                                                                 #   124/155
DEFVAR LF@b                                                                     #   125/155
DEFVAR LF@&b                                                                    #   126/155
MOVE LF@&b int@16                                                               #   127/155
MOVE LF@b LF@&b                                                                 #   128/155
DEFVAR LF@&c                                                                    #   129/155
MOVE LF@&c LF@b                                                                 #   130/155
PUSHS LF@&c                                                                     #   131/155
INT2FLOATS                                                                      #   132/155
MOVE LF@&c LF@a                                                                 #   133/155
PUSHS LF@&c                                                                     #   134/155
INT2FLOATS                                                                      #   135/155
DIVS                                                                            #   136/155
MOVE LF@&c LF@a                                                                 #   137/155
PUSHS LF@&c                                                                     #   138/155
INT2FLOATS                                                                      #   139/155
ADDS                                                                            #   140/155
MOVE LF@&c LF@b                                                                 #   141/155
PUSHS LF@&c                                                                     #   142/155
INT2FLOATS                                                                      #   143/155
SUBS                                                                            #   144/155
MOVE LF@&c int@100                                                              #   145/155
PUSHS LF@&c                                                                     #   146/155
INT2FLOATS                                                                      #   147/155
ADDS                                                                            #   148/155
POPS LF@&c                                                                      #   149/155
FLOAT2R2EINT LF@&c LF@&c                                                        #   150/155
MOVE LF@a LF@&c                                                                 #   151/155
DEFVAR LF@&d                                                                    #   152/155
MOVE LF@&d LF@a                                                                 #   153/155
WRITE LF@&d                                                                     #   154/155
POPFRAME                                                                        #   155/155

