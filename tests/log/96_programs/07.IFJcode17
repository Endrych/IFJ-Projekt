# 2017-12-02 16:01:46.773852
# SECTION: 96_programs
# TEST: 07
# INFO: Draw a pyramide
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: 
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# Everything is OK
# 
# INTERPRETER STDERR:
# Executing instruction: IJUMP at line: 2 with following arguments:
# Executing instruction: ILABEL at line: 118 with following arguments:
# Executing instruction: ICREATEFRAME at line: 119 with following arguments:
# Executing instruction: IPUSHFRAME at line: 120 with following arguments:
# Executing instruction: IDEFVAR at line: 121 with following arguments:
# Dest: LF@&a
# Executing instruction: IMOVE at line: 122 with following arguments:
# Arg1: Const@=Enter number of rows
# (string)
# Dest: LF@&a()
# Executing instruction: IWRITE at line: 123 with following arguments:
# Arg1: LF@&a=Enter number of rows
# (string)
# Executing instruction: IDEFVAR at line: 124 with following arguments:
# Dest: LF@rows
# Executing instruction: IMOVE at line: 125 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@rows()
# Executing instruction: IWRITE at line: 126 with following arguments:
# Arg1: Const@=? (string)
# Executing instruction: IREAD at line: 127 with following arguments:
# Dest: LF@rows=0(int)
# Executing instruction: IDEFVAR at line: 128 with following arguments:
# Dest: LF@&b
# Executing instruction: IMOVE at line: 129 with following arguments:
# Arg1: Const@=
# (string)
# Dest: LF@&b()
# Executing instruction: IWRITE at line: 130 with following arguments:
# Arg1: LF@&b=
# (string)
# Executing instruction: IDEFVAR at line: 131 with following arguments:
# Dest: LF@i
# Executing instruction: IDEFVAR at line: 132 with following arguments:
# Dest: LF@&c
# Executing instruction: IMOVE at line: 133 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&c()
# Executing instruction: IMOVE at line: 134 with following arguments:
# Arg1: LF@&c=1(int)
# Dest: LF@i()
# Executing instruction: IDEFVAR at line: 135 with following arguments:
# Dest: LF@j
# Executing instruction: IDEFVAR at line: 136 with following arguments:
# Dest: LF@&d
# Executing instruction: IMOVE at line: 137 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&d()
# Executing instruction: IMOVE at line: 138 with following arguments:
# Arg1: LF@&d=1(int)
# Dest: LF@j()
# Executing instruction: ILABEL at line: 139 with following arguments:
# Executing instruction: ICREATEFRAME at line: 140 with following arguments:
# Executing instruction: IDEFVAR at line: 141 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 142 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 143 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 144 with following arguments:
# Arg1: LF@i=1(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 145 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 146 with following arguments:
# Arg1: LF@j=1(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 147 with following arguments:
# Executing instruction: IDEFVAR at line: 148 with following arguments:
# Dest: LF@&e
# Executing instruction: IMOVE at line: 149 with following arguments:
# Arg1: LF@i=1(int)
# Dest: LF@&e()
# Executing instruction: IPUSHS at line: 150 with following arguments:
# Arg1: LF@&e=1(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 151 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: LF@&e=1(int)
# Executing instruction: IPUSHS at line: 152 with following arguments:
# Arg1: LF@&e=10(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 153 with following arguments:
# Dest: LF@&f
# Executing instruction: IDEFVAR at line: 154 with following arguments:
# Dest: LF@&g
# Executing instruction: IPOPS at line: 155 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@&f()
# Executing instruction: IPOPS at line: 156 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@&g()
# Executing instruction: IPUSHS at line: 157 with following arguments:
# Arg1: LF@&g=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 158 with following arguments:
# Arg1: LF@&f=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 159 with following arguments:
# Arg1: LF@&g=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 160 with following arguments:
# Arg1: LF@&f=10(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 161 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 162 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&f=10(int)
# Executing instruction: IEQS at line: 163 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 164 with following arguments:
# Arg1: LF@&f=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 165 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 166 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&e=10(int)
# Executing instruction: IJUMPIFNEQ at line: 167 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&e=true(bool)
# Executing instruction: IDEFVAR at line: 168 with following arguments:
# Dest: LF@&h
# Executing instruction: IMOVE at line: 169 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&h()
# Executing instruction: IMOVE at line: 170 with following arguments:
# Arg1: LF@&h=1(int)
# Dest: LF@j=1(int)
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=1(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=1(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=1(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=1(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=1(int)
# Dest: LF@&i=1(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=1(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@&j=1(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=false(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=1(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=1(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=1(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=1(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=1(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=2(int)
# Dest: LF@j=1(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=1(int)
# Dest: LF@i=1(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=2(int)
# Dest: LF@j=1(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=1(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=2(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=2(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=2(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=1(int)
# Dest: LF@&i=2(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=1(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@&j=1(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=false(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@&i=1(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=false(bool)
# Executing instruction: ILABEL at line: 216 with following arguments:
# Executing instruction: IPOPFRAME at line: 217 with following arguments:
# Executing instruction: IDEFVAR at line: 218 with following arguments:
# Dest: LF@&n
# Executing instruction: IMOVE at line: 219 with following arguments:
# Arg1: Const@=
# (string)
# Dest: LF@&n()
# Executing instruction: IWRITE at line: 220 with following arguments:
# Arg1: LF@&n=
# (string)
# Executing instruction: IDEFVAR at line: 221 with following arguments:
# Dest: LF@&o
# Executing instruction: IMOVE at line: 222 with following arguments:
# Arg1: LF@i=1(int)
# Dest: LF@&o()
# Executing instruction: IPUSHS at line: 223 with following arguments:
# Arg1: LF@&o=1(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 224 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&o=1(int)
# Executing instruction: IPUSHS at line: 225 with following arguments:
# Arg1: LF@&o=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 226 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 227 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@&o=1(int)
# Executing instruction: IMOVE at line: 228 with following arguments:
# Arg1: LF@&o=2(int)
# Dest: LF@i=1(int)
# Executing instruction: IPOPFRAME at line: 229 with following arguments:
# Executing instruction: IMOVE at line: 230 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 231 with following arguments:
# Arg1: TF@i=2(int)
# Dest: LF@i=1(int)
# Executing instruction: IMOVE at line: 232 with following arguments:
# Arg1: TF@j=2(int)
# Dest: LF@j=1(int)
# Executing instruction: IJUMP at line: 233 with following arguments:
# Executing instruction: ILABEL at line: 139 with following arguments:
# Executing instruction: ICREATEFRAME at line: 140 with following arguments:
# Executing instruction: IDEFVAR at line: 141 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 142 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 143 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 144 with following arguments:
# Arg1: LF@i=2(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 145 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 146 with following arguments:
# Arg1: LF@j=2(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 147 with following arguments:
# Executing instruction: IDEFVAR at line: 148 with following arguments:
# Dest: LF@&e
# Executing instruction: IMOVE at line: 149 with following arguments:
# Arg1: LF@i=2(int)
# Dest: LF@&e()
# Executing instruction: IPUSHS at line: 150 with following arguments:
# Arg1: LF@&e=2(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 151 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: LF@&e=2(int)
# Executing instruction: IPUSHS at line: 152 with following arguments:
# Arg1: LF@&e=10(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 153 with following arguments:
# Dest: LF@&f
# Executing instruction: IDEFVAR at line: 154 with following arguments:
# Dest: LF@&g
# Executing instruction: IPOPS at line: 155 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@&f()
# Executing instruction: IPOPS at line: 156 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@&g()
# Executing instruction: IPUSHS at line: 157 with following arguments:
# Arg1: LF@&g=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 158 with following arguments:
# Arg1: LF@&f=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 159 with following arguments:
# Arg1: LF@&g=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 160 with following arguments:
# Arg1: LF@&f=10(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 161 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 162 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&f=10(int)
# Executing instruction: IEQS at line: 163 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 164 with following arguments:
# Arg1: LF@&f=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 165 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 166 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&e=10(int)
# Executing instruction: IJUMPIFNEQ at line: 167 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&e=true(bool)
# Executing instruction: IDEFVAR at line: 168 with following arguments:
# Dest: LF@&h
# Executing instruction: IMOVE at line: 169 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&h()
# Executing instruction: IMOVE at line: 170 with following arguments:
# Arg1: LF@&h=1(int)
# Dest: LF@j=2(int)
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=2(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=1(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=1(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=1(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=2(int)
# Dest: LF@&i=1(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=2(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=2(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=2(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=2(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=1(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=1(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=1(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=1(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=2(int)
# Dest: LF@j=1(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=2(int)
# Dest: LF@i=2(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=2(int)
# Dest: LF@j=1(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=2(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=2(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=2(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=2(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=2(int)
# Dest: LF@&i=2(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=2(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=2(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@&j=2(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=false(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=2(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=2(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=2(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=2(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=2(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=2(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=3(int)
# Dest: LF@j=2(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=2(int)
# Dest: LF@i=2(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=3(int)
# Dest: LF@j=2(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=2(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=3(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=3(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=3(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=2(int)
# Dest: LF@&i=3(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=2(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=2(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@&j=2(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=false(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@&i=2(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=false(bool)
# Executing instruction: ILABEL at line: 216 with following arguments:
# Executing instruction: IPOPFRAME at line: 217 with following arguments:
# Executing instruction: IDEFVAR at line: 218 with following arguments:
# Dest: LF@&n
# Executing instruction: IMOVE at line: 219 with following arguments:
# Arg1: Const@=
# (string)
# Dest: LF@&n()
# Executing instruction: IWRITE at line: 220 with following arguments:
# Arg1: LF@&n=
# (string)
# Executing instruction: IDEFVAR at line: 221 with following arguments:
# Dest: LF@&o
# Executing instruction: IMOVE at line: 222 with following arguments:
# Arg1: LF@i=2(int)
# Dest: LF@&o()
# Executing instruction: IPUSHS at line: 223 with following arguments:
# Arg1: LF@&o=2(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 224 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&o=2(int)
# Executing instruction: IPUSHS at line: 225 with following arguments:
# Arg1: LF@&o=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 226 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 227 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@&o=1(int)
# Executing instruction: IMOVE at line: 228 with following arguments:
# Arg1: LF@&o=3(int)
# Dest: LF@i=2(int)
# Executing instruction: IPOPFRAME at line: 229 with following arguments:
# Executing instruction: IMOVE at line: 230 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 231 with following arguments:
# Arg1: TF@i=3(int)
# Dest: LF@i=2(int)
# Executing instruction: IMOVE at line: 232 with following arguments:
# Arg1: TF@j=3(int)
# Dest: LF@j=2(int)
# Executing instruction: IJUMP at line: 233 with following arguments:
# Executing instruction: ILABEL at line: 139 with following arguments:
# Executing instruction: ICREATEFRAME at line: 140 with following arguments:
# Executing instruction: IDEFVAR at line: 141 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 142 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 143 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 144 with following arguments:
# Arg1: LF@i=3(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 145 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 146 with following arguments:
# Arg1: LF@j=3(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 147 with following arguments:
# Executing instruction: IDEFVAR at line: 148 with following arguments:
# Dest: LF@&e
# Executing instruction: IMOVE at line: 149 with following arguments:
# Arg1: LF@i=3(int)
# Dest: LF@&e()
# Executing instruction: IPUSHS at line: 150 with following arguments:
# Arg1: LF@&e=3(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 151 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: LF@&e=3(int)
# Executing instruction: IPUSHS at line: 152 with following arguments:
# Arg1: LF@&e=10(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 153 with following arguments:
# Dest: LF@&f
# Executing instruction: IDEFVAR at line: 154 with following arguments:
# Dest: LF@&g
# Executing instruction: IPOPS at line: 155 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@&f()
# Executing instruction: IPOPS at line: 156 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@&g()
# Executing instruction: IPUSHS at line: 157 with following arguments:
# Arg1: LF@&g=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 158 with following arguments:
# Arg1: LF@&f=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 159 with following arguments:
# Arg1: LF@&g=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 160 with following arguments:
# Arg1: LF@&f=10(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 161 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 162 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&f=10(int)
# Executing instruction: IEQS at line: 163 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 164 with following arguments:
# Arg1: LF@&f=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 165 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 166 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&e=10(int)
# Executing instruction: IJUMPIFNEQ at line: 167 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&e=true(bool)
# Executing instruction: IDEFVAR at line: 168 with following arguments:
# Dest: LF@&h
# Executing instruction: IMOVE at line: 169 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&h()
# Executing instruction: IMOVE at line: 170 with following arguments:
# Arg1: LF@&h=1(int)
# Dest: LF@j=3(int)
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=3(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=1(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=1(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=1(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=3(int)
# Dest: LF@&i=1(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=3(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=3(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=3(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=3(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=1(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=1(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=1(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=1(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=2(int)
# Dest: LF@j=1(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=3(int)
# Dest: LF@i=3(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=2(int)
# Dest: LF@j=1(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=3(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=2(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=2(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=2(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=3(int)
# Dest: LF@&i=2(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=3(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=3(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=3(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=3(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=2(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=2(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=2(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=2(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=2(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=3(int)
# Dest: LF@j=2(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=3(int)
# Dest: LF@i=3(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=3(int)
# Dest: LF@j=2(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=3(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=3(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=3(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=3(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=3(int)
# Dest: LF@&i=3(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=3(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=3(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@&j=3(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=false(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=3(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=3(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=3(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=3(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=3(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=3(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=4(int)
# Dest: LF@j=3(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=3(int)
# Dest: LF@i=3(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=4(int)
# Dest: LF@j=3(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=3(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=4(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=4(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=4(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=3(int)
# Dest: LF@&i=4(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=3(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=3(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@&j=3(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=false(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@&i=3(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=false(bool)
# Executing instruction: ILABEL at line: 216 with following arguments:
# Executing instruction: IPOPFRAME at line: 217 with following arguments:
# Executing instruction: IDEFVAR at line: 218 with following arguments:
# Dest: LF@&n
# Executing instruction: IMOVE at line: 219 with following arguments:
# Arg1: Const@=
# (string)
# Dest: LF@&n()
# Executing instruction: IWRITE at line: 220 with following arguments:
# Arg1: LF@&n=
# (string)
# Executing instruction: IDEFVAR at line: 221 with following arguments:
# Dest: LF@&o
# Executing instruction: IMOVE at line: 222 with following arguments:
# Arg1: LF@i=3(int)
# Dest: LF@&o()
# Executing instruction: IPUSHS at line: 223 with following arguments:
# Arg1: LF@&o=3(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 224 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&o=3(int)
# Executing instruction: IPUSHS at line: 225 with following arguments:
# Arg1: LF@&o=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 226 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 227 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@&o=1(int)
# Executing instruction: IMOVE at line: 228 with following arguments:
# Arg1: LF@&o=4(int)
# Dest: LF@i=3(int)
# Executing instruction: IPOPFRAME at line: 229 with following arguments:
# Executing instruction: IMOVE at line: 230 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 231 with following arguments:
# Arg1: TF@i=4(int)
# Dest: LF@i=3(int)
# Executing instruction: IMOVE at line: 232 with following arguments:
# Arg1: TF@j=4(int)
# Dest: LF@j=3(int)
# Executing instruction: IJUMP at line: 233 with following arguments:
# Executing instruction: ILABEL at line: 139 with following arguments:
# Executing instruction: ICREATEFRAME at line: 140 with following arguments:
# Executing instruction: IDEFVAR at line: 141 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 142 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 143 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 144 with following arguments:
# Arg1: LF@i=4(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 145 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 146 with following arguments:
# Arg1: LF@j=4(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 147 with following arguments:
# Executing instruction: IDEFVAR at line: 148 with following arguments:
# Dest: LF@&e
# Executing instruction: IMOVE at line: 149 with following arguments:
# Arg1: LF@i=4(int)
# Dest: LF@&e()
# Executing instruction: IPUSHS at line: 150 with following arguments:
# Arg1: LF@&e=4(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 151 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: LF@&e=4(int)
# Executing instruction: IPUSHS at line: 152 with following arguments:
# Arg1: LF@&e=10(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 153 with following arguments:
# Dest: LF@&f
# Executing instruction: IDEFVAR at line: 154 with following arguments:
# Dest: LF@&g
# Executing instruction: IPOPS at line: 155 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@&f()
# Executing instruction: IPOPS at line: 156 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@&g()
# Executing instruction: IPUSHS at line: 157 with following arguments:
# Arg1: LF@&g=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 158 with following arguments:
# Arg1: LF@&f=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 159 with following arguments:
# Arg1: LF@&g=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 160 with following arguments:
# Arg1: LF@&f=10(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 161 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 162 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&f=10(int)
# Executing instruction: IEQS at line: 163 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 164 with following arguments:
# Arg1: LF@&f=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 165 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 166 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&e=10(int)
# Executing instruction: IJUMPIFNEQ at line: 167 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&e=true(bool)
# Executing instruction: IDEFVAR at line: 168 with following arguments:
# Dest: LF@&h
# Executing instruction: IMOVE at line: 169 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&h()
# Executing instruction: IMOVE at line: 170 with following arguments:
# Arg1: LF@&h=1(int)
# Dest: LF@j=4(int)
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=4(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=1(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=1(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=1(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=4(int)
# Dest: LF@&i=1(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=4(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=4(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=4(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=4(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=1(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=1(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=1(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=1(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=2(int)
# Dest: LF@j=1(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=4(int)
# Dest: LF@i=4(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=2(int)
# Dest: LF@j=1(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=4(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=2(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=2(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=2(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=4(int)
# Dest: LF@&i=2(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=4(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=4(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=4(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=4(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=2(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=2(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=2(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=2(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=2(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=3(int)
# Dest: LF@j=2(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=4(int)
# Dest: LF@i=4(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=3(int)
# Dest: LF@j=2(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=4(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=3(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=3(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=3(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=4(int)
# Dest: LF@&i=3(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=4(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=4(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=4(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=4(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=3(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=3(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=3(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=3(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=3(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=4(int)
# Dest: LF@j=3(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=4(int)
# Dest: LF@i=4(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=4(int)
# Dest: LF@j=3(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=4(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=4(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=4(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=4(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=4(int)
# Dest: LF@&i=4(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=4(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=4(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@&j=4(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=false(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=4(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=4(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=4(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=4(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=4(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=4(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=5(int)
# Dest: LF@j=4(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=4(int)
# Dest: LF@i=4(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=5(int)
# Dest: LF@j=4(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=4(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=5(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=5(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=5(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=4(int)
# Dest: LF@&i=5(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=4(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=4(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=5(int)
# Arg2: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@&j=4(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=5(int)
# Arg2: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=false(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@&i=4(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=false(bool)
# Executing instruction: ILABEL at line: 216 with following arguments:
# Executing instruction: IPOPFRAME at line: 217 with following arguments:
# Executing instruction: IDEFVAR at line: 218 with following arguments:
# Dest: LF@&n
# Executing instruction: IMOVE at line: 219 with following arguments:
# Arg1: Const@=
# (string)
# Dest: LF@&n()
# Executing instruction: IWRITE at line: 220 with following arguments:
# Arg1: LF@&n=
# (string)
# Executing instruction: IDEFVAR at line: 221 with following arguments:
# Dest: LF@&o
# Executing instruction: IMOVE at line: 222 with following arguments:
# Arg1: LF@i=4(int)
# Dest: LF@&o()
# Executing instruction: IPUSHS at line: 223 with following arguments:
# Arg1: LF@&o=4(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 224 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&o=4(int)
# Executing instruction: IPUSHS at line: 225 with following arguments:
# Arg1: LF@&o=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 226 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 227 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@&o=1(int)
# Executing instruction: IMOVE at line: 228 with following arguments:
# Arg1: LF@&o=5(int)
# Dest: LF@i=4(int)
# Executing instruction: IPOPFRAME at line: 229 with following arguments:
# Executing instruction: IMOVE at line: 230 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 231 with following arguments:
# Arg1: TF@i=5(int)
# Dest: LF@i=4(int)
# Executing instruction: IMOVE at line: 232 with following arguments:
# Arg1: TF@j=5(int)
# Dest: LF@j=4(int)
# Executing instruction: IJUMP at line: 233 with following arguments:
# Executing instruction: ILABEL at line: 139 with following arguments:
# Executing instruction: ICREATEFRAME at line: 140 with following arguments:
# Executing instruction: IDEFVAR at line: 141 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 142 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 143 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 144 with following arguments:
# Arg1: LF@i=5(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 145 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 146 with following arguments:
# Arg1: LF@j=5(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 147 with following arguments:
# Executing instruction: IDEFVAR at line: 148 with following arguments:
# Dest: LF@&e
# Executing instruction: IMOVE at line: 149 with following arguments:
# Arg1: LF@i=5(int)
# Dest: LF@&e()
# Executing instruction: IPUSHS at line: 150 with following arguments:
# Arg1: LF@&e=5(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 151 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: LF@&e=5(int)
# Executing instruction: IPUSHS at line: 152 with following arguments:
# Arg1: LF@&e=10(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 153 with following arguments:
# Dest: LF@&f
# Executing instruction: IDEFVAR at line: 154 with following arguments:
# Dest: LF@&g
# Executing instruction: IPOPS at line: 155 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@&f()
# Executing instruction: IPOPS at line: 156 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@&g()
# Executing instruction: IPUSHS at line: 157 with following arguments:
# Arg1: LF@&g=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 158 with following arguments:
# Arg1: LF@&f=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 159 with following arguments:
# Arg1: LF@&g=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 160 with following arguments:
# Arg1: LF@&f=10(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 161 with following arguments:
# Arg1: Stack@=5(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 162 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&f=10(int)
# Executing instruction: IEQS at line: 163 with following arguments:
# Arg1: Stack@=5(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 164 with following arguments:
# Arg1: LF@&f=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 165 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 166 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&e=10(int)
# Executing instruction: IJUMPIFNEQ at line: 167 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&e=true(bool)
# Executing instruction: IDEFVAR at line: 168 with following arguments:
# Dest: LF@&h
# Executing instruction: IMOVE at line: 169 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&h()
# Executing instruction: IMOVE at line: 170 with following arguments:
# Arg1: LF@&h=1(int)
# Dest: LF@j=5(int)
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=5(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=1(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=1(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=1(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=5(int)
# Dest: LF@&i=1(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=5(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=5(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=5(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=5(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=1(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=1(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=1(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=1(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=2(int)
# Dest: LF@j=1(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=5(int)
# Dest: LF@i=5(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=2(int)
# Dest: LF@j=1(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=5(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=2(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=2(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=2(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=5(int)
# Dest: LF@&i=2(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=5(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=5(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=5(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=5(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=2(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=2(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=2(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=2(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=2(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=3(int)
# Dest: LF@j=2(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=5(int)
# Dest: LF@i=5(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=3(int)
# Dest: LF@j=2(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=5(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=3(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=3(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=3(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=5(int)
# Dest: LF@&i=3(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=5(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=5(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=5(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=5(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=3(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=3(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=3(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=3(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=3(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=4(int)
# Dest: LF@j=3(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=5(int)
# Dest: LF@i=5(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=4(int)
# Dest: LF@j=3(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=5(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=4(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=4(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=4(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=5(int)
# Dest: LF@&i=4(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=5(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=5(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=5(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=5(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=4(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=4(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=4(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=4(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=4(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=5(int)
# Dest: LF@j=4(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=5(int)
# Dest: LF@i=5(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=5(int)
# Dest: LF@j=4(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=5(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=5(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=5(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=5(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=5(int)
# Dest: LF@&i=5(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=5(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=5(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=5(int)
# Arg2: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@&j=5(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=5(int)
# Arg2: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=false(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=5(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=5(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=5(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=5(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=5(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=5(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=5(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=6(int)
# Dest: LF@j=5(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=5(int)
# Dest: LF@i=5(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=6(int)
# Dest: LF@j=5(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=5(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=6(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=6(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=6(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=5(int)
# Dest: LF@&i=6(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=5(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=5(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=6(int)
# Arg2: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@&j=5(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=6(int)
# Arg2: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=false(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@&i=5(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=false(bool)
# Executing instruction: ILABEL at line: 216 with following arguments:
# Executing instruction: IPOPFRAME at line: 217 with following arguments:
# Executing instruction: IDEFVAR at line: 218 with following arguments:
# Dest: LF@&n
# Executing instruction: IMOVE at line: 219 with following arguments:
# Arg1: Const@=
# (string)
# Dest: LF@&n()
# Executing instruction: IWRITE at line: 220 with following arguments:
# Arg1: LF@&n=
# (string)
# Executing instruction: IDEFVAR at line: 221 with following arguments:
# Dest: LF@&o
# Executing instruction: IMOVE at line: 222 with following arguments:
# Arg1: LF@i=5(int)
# Dest: LF@&o()
# Executing instruction: IPUSHS at line: 223 with following arguments:
# Arg1: LF@&o=5(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 224 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&o=5(int)
# Executing instruction: IPUSHS at line: 225 with following arguments:
# Arg1: LF@&o=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 226 with following arguments:
# Arg1: Stack@=5(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 227 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@&o=1(int)
# Executing instruction: IMOVE at line: 228 with following arguments:
# Arg1: LF@&o=6(int)
# Dest: LF@i=5(int)
# Executing instruction: IPOPFRAME at line: 229 with following arguments:
# Executing instruction: IMOVE at line: 230 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 231 with following arguments:
# Arg1: TF@i=6(int)
# Dest: LF@i=5(int)
# Executing instruction: IMOVE at line: 232 with following arguments:
# Arg1: TF@j=6(int)
# Dest: LF@j=5(int)
# Executing instruction: IJUMP at line: 233 with following arguments:
# Executing instruction: ILABEL at line: 139 with following arguments:
# Executing instruction: ICREATEFRAME at line: 140 with following arguments:
# Executing instruction: IDEFVAR at line: 141 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 142 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 143 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 144 with following arguments:
# Arg1: LF@i=6(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 145 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 146 with following arguments:
# Arg1: LF@j=6(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 147 with following arguments:
# Executing instruction: IDEFVAR at line: 148 with following arguments:
# Dest: LF@&e
# Executing instruction: IMOVE at line: 149 with following arguments:
# Arg1: LF@i=6(int)
# Dest: LF@&e()
# Executing instruction: IPUSHS at line: 150 with following arguments:
# Arg1: LF@&e=6(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 151 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: LF@&e=6(int)
# Executing instruction: IPUSHS at line: 152 with following arguments:
# Arg1: LF@&e=10(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 153 with following arguments:
# Dest: LF@&f
# Executing instruction: IDEFVAR at line: 154 with following arguments:
# Dest: LF@&g
# Executing instruction: IPOPS at line: 155 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@&f()
# Executing instruction: IPOPS at line: 156 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@&g()
# Executing instruction: IPUSHS at line: 157 with following arguments:
# Arg1: LF@&g=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 158 with following arguments:
# Arg1: LF@&f=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 159 with following arguments:
# Arg1: LF@&g=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 160 with following arguments:
# Arg1: LF@&f=10(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 161 with following arguments:
# Arg1: Stack@=6(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 162 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&f=10(int)
# Executing instruction: IEQS at line: 163 with following arguments:
# Arg1: Stack@=6(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 164 with following arguments:
# Arg1: LF@&f=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 165 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 166 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&e=10(int)
# Executing instruction: IJUMPIFNEQ at line: 167 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&e=true(bool)
# Executing instruction: IDEFVAR at line: 168 with following arguments:
# Dest: LF@&h
# Executing instruction: IMOVE at line: 169 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&h()
# Executing instruction: IMOVE at line: 170 with following arguments:
# Arg1: LF@&h=1(int)
# Dest: LF@j=6(int)
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=6(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=1(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=1(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=1(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=6(int)
# Dest: LF@&i=1(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=6(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=6(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=6(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=6(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=1(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=1(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=1(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=1(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=2(int)
# Dest: LF@j=1(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=6(int)
# Dest: LF@i=6(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=2(int)
# Dest: LF@j=1(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=6(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=2(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=2(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=2(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=6(int)
# Dest: LF@&i=2(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=6(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=6(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=6(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=6(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=2(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=2(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=2(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=2(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=2(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=3(int)
# Dest: LF@j=2(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=6(int)
# Dest: LF@i=6(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=3(int)
# Dest: LF@j=2(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=6(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=3(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=3(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=3(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=6(int)
# Dest: LF@&i=3(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=6(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=6(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=6(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=6(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=3(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=3(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=3(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=3(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=3(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=4(int)
# Dest: LF@j=3(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=6(int)
# Dest: LF@i=6(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=4(int)
# Dest: LF@j=3(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=6(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=4(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=4(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=4(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=6(int)
# Dest: LF@&i=4(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=6(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=6(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=6(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=6(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=4(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=4(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=4(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=4(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=4(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=5(int)
# Dest: LF@j=4(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=6(int)
# Dest: LF@i=6(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=5(int)
# Dest: LF@j=4(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=6(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=5(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=5(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=5(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=6(int)
# Dest: LF@&i=5(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=6(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=6(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=5(int)
# Arg2: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=6(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=5(int)
# Arg2: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=6(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=5(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=5(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=5(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=5(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=5(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=5(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=6(int)
# Dest: LF@j=5(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=6(int)
# Dest: LF@i=6(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=6(int)
# Dest: LF@j=5(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=6(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=6(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=6(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=6(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=6(int)
# Dest: LF@&i=6(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=6(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=6(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=6(int)
# Arg2: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@&j=6(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=6(int)
# Arg2: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=false(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=6(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=6(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=6(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=6(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=6(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=6(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=6(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=7(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=7(int)
# Dest: LF@j=6(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=6(int)
# Dest: LF@i=6(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=7(int)
# Dest: LF@j=6(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=6(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=7(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=7(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=7(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=6(int)
# Dest: LF@&i=7(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=6(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=7(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=6(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=7(int)
# Arg2: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@&j=6(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=7(int)
# Arg2: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=false(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@&i=6(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=false(bool)
# Executing instruction: ILABEL at line: 216 with following arguments:
# Executing instruction: IPOPFRAME at line: 217 with following arguments:
# Executing instruction: IDEFVAR at line: 218 with following arguments:
# Dest: LF@&n
# Executing instruction: IMOVE at line: 219 with following arguments:
# Arg1: Const@=
# (string)
# Dest: LF@&n()
# Executing instruction: IWRITE at line: 220 with following arguments:
# Arg1: LF@&n=
# (string)
# Executing instruction: IDEFVAR at line: 221 with following arguments:
# Dest: LF@&o
# Executing instruction: IMOVE at line: 222 with following arguments:
# Arg1: LF@i=6(int)
# Dest: LF@&o()
# Executing instruction: IPUSHS at line: 223 with following arguments:
# Arg1: LF@&o=6(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 224 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&o=6(int)
# Executing instruction: IPUSHS at line: 225 with following arguments:
# Arg1: LF@&o=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 226 with following arguments:
# Arg1: Stack@=6(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 227 with following arguments:
# Arg1: Stack@=7(int)
# Dest: LF@&o=1(int)
# Executing instruction: IMOVE at line: 228 with following arguments:
# Arg1: LF@&o=7(int)
# Dest: LF@i=6(int)
# Executing instruction: IPOPFRAME at line: 229 with following arguments:
# Executing instruction: IMOVE at line: 230 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 231 with following arguments:
# Arg1: TF@i=7(int)
# Dest: LF@i=6(int)
# Executing instruction: IMOVE at line: 232 with following arguments:
# Arg1: TF@j=7(int)
# Dest: LF@j=6(int)
# Executing instruction: IJUMP at line: 233 with following arguments:
# Executing instruction: ILABEL at line: 139 with following arguments:
# Executing instruction: ICREATEFRAME at line: 140 with following arguments:
# Executing instruction: IDEFVAR at line: 141 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 142 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 143 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 144 with following arguments:
# Arg1: LF@i=7(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 145 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 146 with following arguments:
# Arg1: LF@j=7(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 147 with following arguments:
# Executing instruction: IDEFVAR at line: 148 with following arguments:
# Dest: LF@&e
# Executing instruction: IMOVE at line: 149 with following arguments:
# Arg1: LF@i=7(int)
# Dest: LF@&e()
# Executing instruction: IPUSHS at line: 150 with following arguments:
# Arg1: LF@&e=7(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 151 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: LF@&e=7(int)
# Executing instruction: IPUSHS at line: 152 with following arguments:
# Arg1: LF@&e=10(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 153 with following arguments:
# Dest: LF@&f
# Executing instruction: IDEFVAR at line: 154 with following arguments:
# Dest: LF@&g
# Executing instruction: IPOPS at line: 155 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@&f()
# Executing instruction: IPOPS at line: 156 with following arguments:
# Arg1: Stack@=7(int)
# Dest: LF@&g()
# Executing instruction: IPUSHS at line: 157 with following arguments:
# Arg1: LF@&g=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 158 with following arguments:
# Arg1: LF@&f=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 159 with following arguments:
# Arg1: LF@&g=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 160 with following arguments:
# Arg1: LF@&f=10(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 161 with following arguments:
# Arg1: Stack@=7(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 162 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&f=10(int)
# Executing instruction: IEQS at line: 163 with following arguments:
# Arg1: Stack@=7(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 164 with following arguments:
# Arg1: LF@&f=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 165 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 166 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&e=10(int)
# Executing instruction: IJUMPIFNEQ at line: 167 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&e=true(bool)
# Executing instruction: IDEFVAR at line: 168 with following arguments:
# Dest: LF@&h
# Executing instruction: IMOVE at line: 169 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&h()
# Executing instruction: IMOVE at line: 170 with following arguments:
# Arg1: LF@&h=1(int)
# Dest: LF@j=7(int)
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=7(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=1(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=1(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=1(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=7(int)
# Dest: LF@&i=1(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=7(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=7(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=7(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=7(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=7(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=1(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=1(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=1(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=1(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=2(int)
# Dest: LF@j=1(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=7(int)
# Dest: LF@i=7(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=2(int)
# Dest: LF@j=1(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=7(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=2(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=2(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=2(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=7(int)
# Dest: LF@&i=2(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=7(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=7(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=7(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=7(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=7(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=2(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=2(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=2(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=2(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=2(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=3(int)
# Dest: LF@j=2(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=7(int)
# Dest: LF@i=7(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=3(int)
# Dest: LF@j=2(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=7(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=3(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=3(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=3(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=7(int)
# Dest: LF@&i=3(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=7(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=7(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=7(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=7(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=7(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=3(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=3(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=3(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=3(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=3(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=4(int)
# Dest: LF@j=3(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=7(int)
# Dest: LF@i=7(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=4(int)
# Dest: LF@j=3(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=7(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=4(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=4(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=4(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=7(int)
# Dest: LF@&i=4(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=7(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=7(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=7(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=7(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=7(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=4(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=4(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=4(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=4(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=4(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=5(int)
# Dest: LF@j=4(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=7(int)
# Dest: LF@i=7(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=5(int)
# Dest: LF@j=4(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=7(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=5(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=5(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=5(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=7(int)
# Dest: LF@&i=5(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=7(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=7(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=7(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=5(int)
# Arg2: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=7(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=5(int)
# Arg2: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=7(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=5(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=5(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=5(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=5(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=5(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=5(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=6(int)
# Dest: LF@j=5(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=7(int)
# Dest: LF@i=7(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=6(int)
# Dest: LF@j=5(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=7(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=6(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=6(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=6(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=7(int)
# Dest: LF@&i=6(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=7(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=7(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=7(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=6(int)
# Arg2: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=7(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=6(int)
# Arg2: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=7(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=6(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=6(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=6(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=6(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=6(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=6(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=7(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=7(int)
# Dest: LF@j=6(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=7(int)
# Dest: LF@i=7(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=7(int)
# Dest: LF@j=6(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=7(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=7(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=7(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=7(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=7(int)
# Dest: LF@&i=7(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=7(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=7(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=7(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=7(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=7(int)
# Arg2: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@&j=7(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=7(int)
# Arg2: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=false(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=7(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=7(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=7(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=7(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=7(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=7(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=7(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=8(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=8(int)
# Dest: LF@j=7(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=7(int)
# Dest: LF@i=7(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=8(int)
# Dest: LF@j=7(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=7(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=8(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=8(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=8(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=7(int)
# Dest: LF@&i=8(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=7(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=7(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=8(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=7(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=8(int)
# Arg2: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@&j=7(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=8(int)
# Arg2: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=false(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@&i=7(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=false(bool)
# Executing instruction: ILABEL at line: 216 with following arguments:
# Executing instruction: IPOPFRAME at line: 217 with following arguments:
# Executing instruction: IDEFVAR at line: 218 with following arguments:
# Dest: LF@&n
# Executing instruction: IMOVE at line: 219 with following arguments:
# Arg1: Const@=
# (string)
# Dest: LF@&n()
# Executing instruction: IWRITE at line: 220 with following arguments:
# Arg1: LF@&n=
# (string)
# Executing instruction: IDEFVAR at line: 221 with following arguments:
# Dest: LF@&o
# Executing instruction: IMOVE at line: 222 with following arguments:
# Arg1: LF@i=7(int)
# Dest: LF@&o()
# Executing instruction: IPUSHS at line: 223 with following arguments:
# Arg1: LF@&o=7(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 224 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&o=7(int)
# Executing instruction: IPUSHS at line: 225 with following arguments:
# Arg1: LF@&o=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 226 with following arguments:
# Arg1: Stack@=7(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 227 with following arguments:
# Arg1: Stack@=8(int)
# Dest: LF@&o=1(int)
# Executing instruction: IMOVE at line: 228 with following arguments:
# Arg1: LF@&o=8(int)
# Dest: LF@i=7(int)
# Executing instruction: IPOPFRAME at line: 229 with following arguments:
# Executing instruction: IMOVE at line: 230 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 231 with following arguments:
# Arg1: TF@i=8(int)
# Dest: LF@i=7(int)
# Executing instruction: IMOVE at line: 232 with following arguments:
# Arg1: TF@j=8(int)
# Dest: LF@j=7(int)
# Executing instruction: IJUMP at line: 233 with following arguments:
# Executing instruction: ILABEL at line: 139 with following arguments:
# Executing instruction: ICREATEFRAME at line: 140 with following arguments:
# Executing instruction: IDEFVAR at line: 141 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 142 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 143 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 144 with following arguments:
# Arg1: LF@i=8(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 145 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 146 with following arguments:
# Arg1: LF@j=8(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 147 with following arguments:
# Executing instruction: IDEFVAR at line: 148 with following arguments:
# Dest: LF@&e
# Executing instruction: IMOVE at line: 149 with following arguments:
# Arg1: LF@i=8(int)
# Dest: LF@&e()
# Executing instruction: IPUSHS at line: 150 with following arguments:
# Arg1: LF@&e=8(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 151 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: LF@&e=8(int)
# Executing instruction: IPUSHS at line: 152 with following arguments:
# Arg1: LF@&e=10(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 153 with following arguments:
# Dest: LF@&f
# Executing instruction: IDEFVAR at line: 154 with following arguments:
# Dest: LF@&g
# Executing instruction: IPOPS at line: 155 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@&f()
# Executing instruction: IPOPS at line: 156 with following arguments:
# Arg1: Stack@=8(int)
# Dest: LF@&g()
# Executing instruction: IPUSHS at line: 157 with following arguments:
# Arg1: LF@&g=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 158 with following arguments:
# Arg1: LF@&f=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 159 with following arguments:
# Arg1: LF@&g=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 160 with following arguments:
# Arg1: LF@&f=10(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 161 with following arguments:
# Arg1: Stack@=8(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 162 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&f=10(int)
# Executing instruction: IEQS at line: 163 with following arguments:
# Arg1: Stack@=8(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 164 with following arguments:
# Arg1: LF@&f=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 165 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 166 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&e=10(int)
# Executing instruction: IJUMPIFNEQ at line: 167 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&e=true(bool)
# Executing instruction: IDEFVAR at line: 168 with following arguments:
# Dest: LF@&h
# Executing instruction: IMOVE at line: 169 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&h()
# Executing instruction: IMOVE at line: 170 with following arguments:
# Arg1: LF@&h=1(int)
# Dest: LF@j=8(int)
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=8(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=1(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=1(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=1(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=8(int)
# Dest: LF@&i=1(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=8(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=8(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=8(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=8(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=8(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=1(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=1(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=1(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=1(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=2(int)
# Dest: LF@j=1(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=8(int)
# Dest: LF@i=8(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=2(int)
# Dest: LF@j=1(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=8(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=2(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=2(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=2(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=8(int)
# Dest: LF@&i=2(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=8(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=8(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=8(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=8(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=8(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=2(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=2(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=2(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=2(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=2(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=3(int)
# Dest: LF@j=2(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=8(int)
# Dest: LF@i=8(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=3(int)
# Dest: LF@j=2(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=8(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=3(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=3(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=3(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=8(int)
# Dest: LF@&i=3(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=8(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=8(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=8(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=8(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=8(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=3(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=3(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=3(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=3(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=3(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=4(int)
# Dest: LF@j=3(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=8(int)
# Dest: LF@i=8(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=4(int)
# Dest: LF@j=3(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=8(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=4(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=4(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=4(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=8(int)
# Dest: LF@&i=4(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=8(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=8(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=8(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=8(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=8(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=4(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=4(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=4(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=4(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=4(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=5(int)
# Dest: LF@j=4(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=8(int)
# Dest: LF@i=8(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=5(int)
# Dest: LF@j=4(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=8(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=5(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=5(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=5(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=8(int)
# Dest: LF@&i=5(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=8(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=8(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=8(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=5(int)
# Arg2: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=8(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=5(int)
# Arg2: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=8(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=5(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=5(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=5(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=5(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=5(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=5(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=6(int)
# Dest: LF@j=5(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=8(int)
# Dest: LF@i=8(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=6(int)
# Dest: LF@j=5(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=8(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=6(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=6(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=6(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=8(int)
# Dest: LF@&i=6(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=8(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=8(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=8(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=6(int)
# Arg2: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=8(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=6(int)
# Arg2: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=8(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=6(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=6(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=6(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=6(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=6(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=6(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=7(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=7(int)
# Dest: LF@j=6(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=8(int)
# Dest: LF@i=8(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=7(int)
# Dest: LF@j=6(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=8(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=7(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=7(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=7(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=8(int)
# Dest: LF@&i=7(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=8(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=8(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=7(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=8(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=7(int)
# Arg2: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=8(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=7(int)
# Arg2: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=8(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=7(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=7(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=7(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=7(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=7(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=7(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=8(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=8(int)
# Dest: LF@j=7(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=8(int)
# Dest: LF@i=8(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=8(int)
# Dest: LF@j=7(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=8(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=8(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=8(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=8(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=8(int)
# Dest: LF@&i=8(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=8(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=8(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=8(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=8(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=8(int)
# Arg2: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@&j=8(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=8(int)
# Arg2: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=false(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=8(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=8(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=8(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=8(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=8(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=8(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=8(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=9(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=9(int)
# Dest: LF@j=8(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=8(int)
# Dest: LF@i=8(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=9(int)
# Dest: LF@j=8(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=8(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=9(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=9(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=9(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=8(int)
# Dest: LF@&i=9(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=8(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=8(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=9(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=8(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=9(int)
# Arg2: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@&j=8(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=9(int)
# Arg2: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=false(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@&i=8(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=false(bool)
# Executing instruction: ILABEL at line: 216 with following arguments:
# Executing instruction: IPOPFRAME at line: 217 with following arguments:
# Executing instruction: IDEFVAR at line: 218 with following arguments:
# Dest: LF@&n
# Executing instruction: IMOVE at line: 219 with following arguments:
# Arg1: Const@=
# (string)
# Dest: LF@&n()
# Executing instruction: IWRITE at line: 220 with following arguments:
# Arg1: LF@&n=
# (string)
# Executing instruction: IDEFVAR at line: 221 with following arguments:
# Dest: LF@&o
# Executing instruction: IMOVE at line: 222 with following arguments:
# Arg1: LF@i=8(int)
# Dest: LF@&o()
# Executing instruction: IPUSHS at line: 223 with following arguments:
# Arg1: LF@&o=8(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 224 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&o=8(int)
# Executing instruction: IPUSHS at line: 225 with following arguments:
# Arg1: LF@&o=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 226 with following arguments:
# Arg1: Stack@=8(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 227 with following arguments:
# Arg1: Stack@=9(int)
# Dest: LF@&o=1(int)
# Executing instruction: IMOVE at line: 228 with following arguments:
# Arg1: LF@&o=9(int)
# Dest: LF@i=8(int)
# Executing instruction: IPOPFRAME at line: 229 with following arguments:
# Executing instruction: IMOVE at line: 230 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 231 with following arguments:
# Arg1: TF@i=9(int)
# Dest: LF@i=8(int)
# Executing instruction: IMOVE at line: 232 with following arguments:
# Arg1: TF@j=9(int)
# Dest: LF@j=8(int)
# Executing instruction: IJUMP at line: 233 with following arguments:
# Executing instruction: ILABEL at line: 139 with following arguments:
# Executing instruction: ICREATEFRAME at line: 140 with following arguments:
# Executing instruction: IDEFVAR at line: 141 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 142 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 143 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 144 with following arguments:
# Arg1: LF@i=9(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 145 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 146 with following arguments:
# Arg1: LF@j=9(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 147 with following arguments:
# Executing instruction: IDEFVAR at line: 148 with following arguments:
# Dest: LF@&e
# Executing instruction: IMOVE at line: 149 with following arguments:
# Arg1: LF@i=9(int)
# Dest: LF@&e()
# Executing instruction: IPUSHS at line: 150 with following arguments:
# Arg1: LF@&e=9(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 151 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: LF@&e=9(int)
# Executing instruction: IPUSHS at line: 152 with following arguments:
# Arg1: LF@&e=10(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 153 with following arguments:
# Dest: LF@&f
# Executing instruction: IDEFVAR at line: 154 with following arguments:
# Dest: LF@&g
# Executing instruction: IPOPS at line: 155 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@&f()
# Executing instruction: IPOPS at line: 156 with following arguments:
# Arg1: Stack@=9(int)
# Dest: LF@&g()
# Executing instruction: IPUSHS at line: 157 with following arguments:
# Arg1: LF@&g=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 158 with following arguments:
# Arg1: LF@&f=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 159 with following arguments:
# Arg1: LF@&g=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 160 with following arguments:
# Arg1: LF@&f=10(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 161 with following arguments:
# Arg1: Stack@=9(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 162 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&f=10(int)
# Executing instruction: IEQS at line: 163 with following arguments:
# Arg1: Stack@=9(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 164 with following arguments:
# Arg1: LF@&f=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 165 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 166 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&e=10(int)
# Executing instruction: IJUMPIFNEQ at line: 167 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&e=true(bool)
# Executing instruction: IDEFVAR at line: 168 with following arguments:
# Dest: LF@&h
# Executing instruction: IMOVE at line: 169 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&h()
# Executing instruction: IMOVE at line: 170 with following arguments:
# Arg1: LF@&h=1(int)
# Dest: LF@j=9(int)
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=9(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=1(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=1(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=1(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=9(int)
# Dest: LF@&i=1(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=9(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=9(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=9(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=9(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=9(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=1(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=1(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=1(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=1(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=2(int)
# Dest: LF@j=1(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=9(int)
# Dest: LF@i=9(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=2(int)
# Dest: LF@j=1(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=9(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=2(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=2(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=2(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=9(int)
# Dest: LF@&i=2(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=9(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=9(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=9(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=9(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=9(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=2(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=2(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=2(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=2(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=2(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=3(int)
# Dest: LF@j=2(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=9(int)
# Dest: LF@i=9(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=3(int)
# Dest: LF@j=2(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=9(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=3(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=3(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=3(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=9(int)
# Dest: LF@&i=3(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=9(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=9(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=9(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=9(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=9(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=3(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=3(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=3(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=3(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=3(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=4(int)
# Dest: LF@j=3(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=9(int)
# Dest: LF@i=9(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=4(int)
# Dest: LF@j=3(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=9(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=4(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=4(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=4(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=9(int)
# Dest: LF@&i=4(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=9(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=9(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=9(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=9(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=9(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=4(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=4(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=4(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=4(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=4(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=5(int)
# Dest: LF@j=4(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=9(int)
# Dest: LF@i=9(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=5(int)
# Dest: LF@j=4(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=9(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=5(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=5(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=5(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=9(int)
# Dest: LF@&i=5(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=9(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=9(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=9(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=5(int)
# Arg2: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=9(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=5(int)
# Arg2: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=9(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=5(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=5(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=5(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=5(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=5(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=5(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=6(int)
# Dest: LF@j=5(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=9(int)
# Dest: LF@i=9(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=6(int)
# Dest: LF@j=5(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=9(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=6(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=6(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=6(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=9(int)
# Dest: LF@&i=6(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=9(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=9(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=9(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=6(int)
# Arg2: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=9(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=6(int)
# Arg2: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=9(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=6(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=6(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=6(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=6(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=6(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=6(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=7(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=7(int)
# Dest: LF@j=6(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=9(int)
# Dest: LF@i=9(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=7(int)
# Dest: LF@j=6(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=9(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=7(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=7(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=7(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=9(int)
# Dest: LF@&i=7(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=9(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=9(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=7(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=9(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=7(int)
# Arg2: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=9(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=7(int)
# Arg2: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=9(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=7(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=7(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=7(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=7(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=7(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=7(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=8(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=8(int)
# Dest: LF@j=7(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=9(int)
# Dest: LF@i=9(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=8(int)
# Dest: LF@j=7(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=9(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=8(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=8(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=8(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=9(int)
# Dest: LF@&i=8(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=9(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=9(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=8(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=9(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=8(int)
# Arg2: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=9(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=8(int)
# Arg2: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=9(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=8(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=8(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=8(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=8(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=8(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=8(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=9(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=9(int)
# Dest: LF@j=8(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=9(int)
# Dest: LF@i=9(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=9(int)
# Dest: LF@j=8(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=9(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=9(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=9(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=9(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=9(int)
# Dest: LF@&i=9(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=9(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=9(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=9(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=9(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=9(int)
# Arg2: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@&j=9(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=9(int)
# Arg2: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=false(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=9(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=9(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=9(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=9(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=9(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=9(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=9(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=10(int)
# Dest: LF@j=9(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=9(int)
# Dest: LF@i=9(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=10(int)
# Dest: LF@j=9(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=9(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=10(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=10(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=10(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=9(int)
# Dest: LF@&i=10(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=9(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=9(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=9(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=10(int)
# Arg2: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@&j=9(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=10(int)
# Arg2: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=false(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@&i=9(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=false(bool)
# Executing instruction: ILABEL at line: 216 with following arguments:
# Executing instruction: IPOPFRAME at line: 217 with following arguments:
# Executing instruction: IDEFVAR at line: 218 with following arguments:
# Dest: LF@&n
# Executing instruction: IMOVE at line: 219 with following arguments:
# Arg1: Const@=
# (string)
# Dest: LF@&n()
# Executing instruction: IWRITE at line: 220 with following arguments:
# Arg1: LF@&n=
# (string)
# Executing instruction: IDEFVAR at line: 221 with following arguments:
# Dest: LF@&o
# Executing instruction: IMOVE at line: 222 with following arguments:
# Arg1: LF@i=9(int)
# Dest: LF@&o()
# Executing instruction: IPUSHS at line: 223 with following arguments:
# Arg1: LF@&o=9(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 224 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&o=9(int)
# Executing instruction: IPUSHS at line: 225 with following arguments:
# Arg1: LF@&o=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 226 with following arguments:
# Arg1: Stack@=9(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 227 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@&o=1(int)
# Executing instruction: IMOVE at line: 228 with following arguments:
# Arg1: LF@&o=10(int)
# Dest: LF@i=9(int)
# Executing instruction: IPOPFRAME at line: 229 with following arguments:
# Executing instruction: IMOVE at line: 230 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 231 with following arguments:
# Arg1: TF@i=10(int)
# Dest: LF@i=9(int)
# Executing instruction: IMOVE at line: 232 with following arguments:
# Arg1: TF@j=10(int)
# Dest: LF@j=9(int)
# Executing instruction: IJUMP at line: 233 with following arguments:
# Executing instruction: ILABEL at line: 139 with following arguments:
# Executing instruction: ICREATEFRAME at line: 140 with following arguments:
# Executing instruction: IDEFVAR at line: 141 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 142 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 143 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 144 with following arguments:
# Arg1: LF@i=10(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 145 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 146 with following arguments:
# Arg1: LF@j=10(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 147 with following arguments:
# Executing instruction: IDEFVAR at line: 148 with following arguments:
# Dest: LF@&e
# Executing instruction: IMOVE at line: 149 with following arguments:
# Arg1: LF@i=10(int)
# Dest: LF@&e()
# Executing instruction: IPUSHS at line: 150 with following arguments:
# Arg1: LF@&e=10(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 151 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: LF@&e=10(int)
# Executing instruction: IPUSHS at line: 152 with following arguments:
# Arg1: LF@&e=10(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 153 with following arguments:
# Dest: LF@&f
# Executing instruction: IDEFVAR at line: 154 with following arguments:
# Dest: LF@&g
# Executing instruction: IPOPS at line: 155 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@&f()
# Executing instruction: IPOPS at line: 156 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@&g()
# Executing instruction: IPUSHS at line: 157 with following arguments:
# Arg1: LF@&g=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 158 with following arguments:
# Arg1: LF@&f=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 159 with following arguments:
# Arg1: LF@&g=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 160 with following arguments:
# Arg1: LF@&f=10(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 161 with following arguments:
# Arg1: Stack@=10(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 162 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@&f=10(int)
# Executing instruction: IEQS at line: 163 with following arguments:
# Arg1: Stack@=10(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 164 with following arguments:
# Arg1: LF@&f=false(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 165 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 166 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&e=10(int)
# Executing instruction: IJUMPIFNEQ at line: 167 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&e=true(bool)
# Executing instruction: IDEFVAR at line: 168 with following arguments:
# Dest: LF@&h
# Executing instruction: IMOVE at line: 169 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&h()
# Executing instruction: IMOVE at line: 170 with following arguments:
# Arg1: LF@&h=1(int)
# Dest: LF@j=10(int)
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=10(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=1(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=1(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=1(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=10(int)
# Dest: LF@&i=1(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=10(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=10(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=10(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=10(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=1(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=1(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=1(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=1(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=2(int)
# Dest: LF@j=1(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=10(int)
# Dest: LF@i=10(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=2(int)
# Dest: LF@j=1(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=10(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=2(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=2(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=2(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=10(int)
# Dest: LF@&i=2(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=10(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=10(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=10(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=10(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=2(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=2(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=2(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=2(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=2(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=3(int)
# Dest: LF@j=2(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=10(int)
# Dest: LF@i=10(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=3(int)
# Dest: LF@j=2(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=10(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=3(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=3(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=3(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=10(int)
# Dest: LF@&i=3(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=10(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=10(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=10(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=10(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=3(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=3(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=3(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=3(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=3(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=4(int)
# Dest: LF@j=3(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=10(int)
# Dest: LF@i=10(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=4(int)
# Dest: LF@j=3(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=10(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=4(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=4(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=4(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=10(int)
# Dest: LF@&i=4(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=10(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=10(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=10(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=10(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=4(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=4(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=4(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=4(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=4(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=5(int)
# Dest: LF@j=4(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=10(int)
# Dest: LF@i=10(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=5(int)
# Dest: LF@j=4(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=10(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=5(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=5(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=5(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=10(int)
# Dest: LF@&i=5(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=10(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=10(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=5(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=10(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=5(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=10(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=5(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=5(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=5(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=5(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=5(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=5(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=6(int)
# Dest: LF@j=5(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=10(int)
# Dest: LF@i=10(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=6(int)
# Dest: LF@j=5(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=10(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=6(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=6(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=6(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=10(int)
# Dest: LF@&i=6(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=10(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=10(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=6(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=10(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=6(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=10(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=6(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=6(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=6(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=6(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=6(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=6(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=7(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=7(int)
# Dest: LF@j=6(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=10(int)
# Dest: LF@i=10(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=7(int)
# Dest: LF@j=6(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=10(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=7(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=7(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=7(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=10(int)
# Dest: LF@&i=7(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=10(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=7(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=10(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=7(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=10(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=7(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=10(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=7(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=7(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=7(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=7(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=7(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=7(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=8(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=8(int)
# Dest: LF@j=7(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=10(int)
# Dest: LF@i=10(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=8(int)
# Dest: LF@j=7(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=10(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=8(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=8(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=8(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=10(int)
# Dest: LF@&i=8(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=10(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=8(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=10(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=8(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=10(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=8(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=10(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=8(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=8(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=8(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=8(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=8(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=8(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=9(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=9(int)
# Dest: LF@j=8(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=10(int)
# Dest: LF@i=10(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=9(int)
# Dest: LF@j=8(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=10(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=9(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=9(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=9(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=10(int)
# Dest: LF@&i=9(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=10(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=9(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=10(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=9(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&j=10(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=9(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=10(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=9(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=9(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=9(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=9(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=9(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=9(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=10(int)
# Dest: LF@j=9(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=10(int)
# Dest: LF@i=10(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=10(int)
# Dest: LF@j=9(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=10(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=10(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=10(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=10(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=10(int)
# Dest: LF@&i=10(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=10(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=10(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=10(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@&j=10(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=10(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=false(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@&i=10(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=true(bool)
# Executing instruction: IDEFVAR at line: 200 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 201 with following arguments:
# Arg1: LF@j=10(int)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 202 with following arguments:
# Arg1: LF@&l=10(int)
# Executing instruction: IDEFVAR at line: 203 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 204 with following arguments:
# Arg1: LF@j=10(int)
# Dest: LF@&m()
# Executing instruction: IPUSHS at line: 205 with following arguments:
# Arg1: LF@&m=10(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 206 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&m=10(int)
# Executing instruction: IPUSHS at line: 207 with following arguments:
# Arg1: LF@&m=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 208 with following arguments:
# Arg1: Stack@=10(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 209 with following arguments:
# Arg1: Stack@=11(int)
# Dest: LF@&m=1(int)
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@&m=11(int)
# Dest: LF@j=10(int)
# Executing instruction: IPOPFRAME at line: 211 with following arguments:
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 213 with following arguments:
# Arg1: TF@i=10(int)
# Dest: LF@i=10(int)
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: TF@j=11(int)
# Dest: LF@j=10(int)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 171 with following arguments:
# Executing instruction: ICREATEFRAME at line: 172 with following arguments:
# Executing instruction: IDEFVAR at line: 173 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 174 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 175 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 176 with following arguments:
# Arg1: LF@i=10(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 177 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 178 with following arguments:
# Arg1: LF@j=11(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 179 with following arguments:
# Executing instruction: IDEFVAR at line: 180 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 181 with following arguments:
# Arg1: LF@j=11(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@&i=11(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 183 with following arguments:
# Arg1: LF@i=10(int)
# Dest: LF@&i=11(int)
# Executing instruction: IPUSHS at line: 184 with following arguments:
# Arg1: LF@&i=10(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@&j
# Executing instruction: IDEFVAR at line: 186 with following arguments:
# Dest: LF@&k
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@&j()
# Executing instruction: IPOPS at line: 188 with following arguments:
# Arg1: Stack@=11(int)
# Dest: LF@&k()
# Executing instruction: IPUSHS at line: 189 with following arguments:
# Arg1: LF@&k=11(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 190 with following arguments:
# Arg1: LF@&j=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@&k=11(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: LF@&j=10(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 193 with following arguments:
# Arg1: Stack@=11(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 194 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@&j=10(int)
# Executing instruction: IEQS at line: 195 with following arguments:
# Arg1: Stack@=11(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: LF@&j=false(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 197 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 198 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@&i=10(int)
# Executing instruction: IJUMPIFNEQ at line: 199 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&i=false(bool)
# Executing instruction: ILABEL at line: 216 with following arguments:
# Executing instruction: IPOPFRAME at line: 217 with following arguments:
# Executing instruction: IDEFVAR at line: 218 with following arguments:
# Dest: LF@&n
# Executing instruction: IMOVE at line: 219 with following arguments:
# Arg1: Const@=
# (string)
# Dest: LF@&n()
# Executing instruction: IWRITE at line: 220 with following arguments:
# Arg1: LF@&n=
# (string)
# Executing instruction: IDEFVAR at line: 221 with following arguments:
# Dest: LF@&o
# Executing instruction: IMOVE at line: 222 with following arguments:
# Arg1: LF@i=10(int)
# Dest: LF@&o()
# Executing instruction: IPUSHS at line: 223 with following arguments:
# Arg1: LF@&o=10(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 224 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&o=10(int)
# Executing instruction: IPUSHS at line: 225 with following arguments:
# Arg1: LF@&o=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 226 with following arguments:
# Arg1: Stack@=10(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 227 with following arguments:
# Arg1: Stack@=11(int)
# Dest: LF@&o=1(int)
# Executing instruction: IMOVE at line: 228 with following arguments:
# Arg1: LF@&o=11(int)
# Dest: LF@i=10(int)
# Executing instruction: IPOPFRAME at line: 229 with following arguments:
# Executing instruction: IMOVE at line: 230 with following arguments:
# Arg1: TF@rows=10(int)
# Dest: LF@rows=10(int)
# Executing instruction: IMOVE at line: 231 with following arguments:
# Arg1: TF@i=11(int)
# Dest: LF@i=10(int)
# Executing instruction: IMOVE at line: 232 with following arguments:
# Arg1: TF@j=11(int)
# Dest: LF@j=10(int)
# Executing instruction: IJUMP at line: 233 with following arguments:
# Executing instruction: ILABEL at line: 139 with following arguments:
# Executing instruction: ICREATEFRAME at line: 140 with following arguments:
# Executing instruction: IDEFVAR at line: 141 with following arguments:
# Dest: TF@rows
# Executing instruction: IMOVE at line: 142 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: TF@rows()
# Executing instruction: IDEFVAR at line: 143 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 144 with following arguments:
# Arg1: LF@i=11(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 145 with following arguments:
# Dest: TF@j
# Executing instruction: IMOVE at line: 146 with following arguments:
# Arg1: LF@j=11(int)
# Dest: TF@j()
# Executing instruction: IPUSHFRAME at line: 147 with following arguments:
# Executing instruction: IDEFVAR at line: 148 with following arguments:
# Dest: LF@&e
# Executing instruction: IMOVE at line: 149 with following arguments:
# Arg1: LF@i=11(int)
# Dest: LF@&e()
# Executing instruction: IPUSHS at line: 150 with following arguments:
# Arg1: LF@&e=11(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 151 with following arguments:
# Arg1: LF@rows=10(int)
# Dest: LF@&e=11(int)
# Executing instruction: IPUSHS at line: 152 with following arguments:
# Arg1: LF@&e=10(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 153 with following arguments:
# Dest: LF@&f
# Executing instruction: IDEFVAR at line: 154 with following arguments:
# Dest: LF@&g
# Executing instruction: IPOPS at line: 155 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@&f()
# Executing instruction: IPOPS at line: 156 with following arguments:
# Arg1: Stack@=11(int)
# Dest: LF@&g()
# Executing instruction: IPUSHS at line: 157 with following arguments:
# Arg1: LF@&g=11(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 158 with following arguments:
# Arg1: LF@&f=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 159 with following arguments:
# Arg1: LF@&g=11(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 160 with following arguments:
# Arg1: LF@&f=10(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 161 with following arguments:
# Arg1: Stack@=11(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 162 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@&f=10(int)
# Executing instruction: IEQS at line: 163 with following arguments:
# Arg1: Stack@=11(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 164 with following arguments:
# Arg1: LF@&f=false(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 165 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 166 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@&e=10(int)
# Executing instruction: IJUMPIFNEQ at line: 167 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&e=false(bool)
# Executing instruction: ILABEL at line: 234 with following arguments:
# Executing instruction: IPOPFRAME at line: 235 with following arguments:
# Executing instruction: IPOPFRAME at line: 236 with following arguments:
# Executing instruction: IGROOT at line: 238 with following arguments:
# I am Groot at 238 (22032).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 10
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 22032 (4397+17635)
# GROOT: 22032
# 
#   1: ' Draw a pyramide
#   2: scope 
#   3:     print !"Enter number of rows\n";
#   4:     dim rows as integer
#   5:     input rows
#   6:     
#   7:     print !"\n";
#   8:     
#   9:     dim i as integer = 1
#  10:     dim j as integer = 1
#  11:     
#  12:     do while i <= rows
#  13:         j = 1
#  14:         do while j <= i
#  15:         
#  16:         
#  17:             print j;
#  18:             j = j + 1
#  19:         loop
#  20:         print !"\n";
#  21:         i = i + 1
#  22:     loop
#  23:     
#  24: end scope
#  25:     

########################################

.IFJcode17                                                                      #     1/236
JUMP $$main                                                                     #     2/236
LABEL $length                                                                   #     3/236
PUSHFRAME                                                                       #     4/236
DEFVAR LF@%retval                                                               #     5/236
MOVE LF@%retval int@0                                                           #     6/236
STRLEN LF@%retval LF@s                                                          #     7/236
LABEL $length$epilog                                                            #     8/236
POPFRAME                                                                        #     9/236
RETURN                                                                          #    10/236
LABEL $substr                                                                   #    11/236
PUSHFRAME                                                                       #    12/236
DEFVAR LF@%retval                                                               #    13/236
MOVE LF@%retval string@                                                         #    14/236
DEFVAR LF@tmp1                                                                  #    15/236
DEFVAR LF@tmp2                                                                  #    16/236
MOVE LF@tmp1 int@0                                                              #    17/236
MOVE LF@tmp2 string@                                                            #    18/236
SUB LF@tmp1 LF@i int@1                                                          #    19/236
DEFVAR LF@length                                                                #    20/236
MOVE LF@length int@0                                                            #    21/236
DEFVAR LF@result                                                                #    22/236
MOVE LF@result bool@false                                                       #    23/236
DEFVAR LF@tmplen                                                                #    24/236
MOVE LF@tmplen int@0                                                            #    25/236
STRLEN LF@tmplen LF@s                                                           #    26/236
SUB LF@tmplen LF@tmplen LF@i                                                    #    27/236
ADD LF@tmplen LF@tmplen int@1                                                   #    28/236
JUMPIFEQ $SubStrReturn0 LF@s LF@tmp2                                            #    29/236
PUSHS LF@i                                                                      #    30/236
PUSHS int@0                                                                     #    31/236
PUSHS LF@i                                                                      #    32/236
PUSHS int@0                                                                     #    33/236
EQS                                                                             #    34/236
POPS LF@result                                                                  #    35/236
LTS                                                                             #    36/236
PUSHS LF@result                                                                 #    37/236
ORS                                                                             #    38/236
POPS LF@result                                                                  #    39/236
JUMPIFEQ $SubStrReturn0 bool@true LF@result                                     #    40/236
PUSHS LF@n                                                                      #    41/236
PUSHS int@0                                                                     #    42/236
LTS                                                                             #    43/236
POPS LF@result                                                                  #    44/236
JUMPIFEQ $SubStrReturnRest bool@true LF@result                                  #    45/236
STRLEN LF@tmplen LF@s                                                           #    46/236
SUB LF@tmplen LF@tmplen LF@i                                                    #    47/236
ADD LF@tmplen LF@tmplen int@1                                                   #    48/236
PUSHS LF@tmplen                                                                 #    49/236
PUSHS LF@n                                                                      #    50/236
LTS                                                                             #    51/236
POPS LF@result                                                                  #    52/236
JUMPIFEQ $SubStrReturnRest bool@true LF@result                                  #    53/236
MOVE LF@tmplen int@0                                                            #    54/236
STRLEN LF@tmplen LF@s                                                           #    55/236
SUB LF@tmplen LF@tmplen LF@i                                                    #    56/236
LABEL $SubStrFor                                                                #    57/236
GETCHAR LF@tmp2 LF@s LF@tmp1                                                    #    58/236
CONCAT LF@%retval LF@%retval LF@tmp2                                            #    59/236
ADD LF@tmp1 LF@tmp1 int@1                                                       #    60/236
STRLEN LF@length LF@%retval                                                     #    61/236
JUMPIFNEQ $SubStrFor LF@length LF@n                                             #    62/236
JUMP $substr$epilog                                                             #    63/236
LABEL $SubStrReturn0                                                            #    64/236
MOVE LF@%retval string@                                                         #    65/236
JUMP $substr$epilog                                                             #    66/236
LABEL $SubStrReturnRest                                                         #    67/236
GETCHAR LF@tmp2 LF@s LF@tmp1                                                    #    68/236
CONCAT LF@%retval LF@%retval LF@tmp2                                            #    69/236
ADD LF@tmp1 LF@tmp1 int@1                                                       #    70/236
STRLEN LF@length LF@%retval                                                     #    71/236
JUMPIFNEQ $SubStrReturnRest LF@tmplen LF@length                                 #    72/236
LABEL $substr$epilog                                                            #    73/236
POPFRAME                                                                        #    74/236
RETURN                                                                          #    75/236
LABEL $asc                                                                      #    76/236
PUSHFRAME                                                                       #    77/236
DEFVAR LF@%retval                                                               #    78/236
MOVE LF@%retval int@0                                                           #    79/236
DEFVAR LF@result                                                                #    80/236
MOVE LF@result bool@false                                                       #    81/236
DEFVAR LF@tmp                                                                   #    82/236
DEFVAR LF@tmp2                                                                  #    83/236
MOVE LF@tmp string@                                                             #    84/236
MOVE LF@tmp2 int@0                                                              #    85/236
PUSHS LF@i                                                                      #    86/236
PUSHS int@0                                                                     #    87/236
PUSHS LF@i                                                                      #    88/236
PUSHS int@0                                                                     #    89/236
EQS                                                                             #    90/236
POPS LF@result                                                                  #    91/236
LTS                                                                             #    92/236
PUSHS LF@result                                                                 #    93/236
ORS                                                                             #    94/236
POPS LF@result                                                                  #    95/236
JUMPIFEQ $asc$epilog bool@true LF@result                                        #    96/236
PUSHS LF@i                                                                      #    97/236
STRLEN LF@tmp2 LF@s                                                             #    98/236
PUSHS LF@tmp2                                                                   #    99/236
GTS                                                                             #   100/236
POPS LF@result                                                                  #   101/236
JUMPIFEQ $asc$epilog bool@true LF@result                                        #   102/236
SUB LF@i LF@i int@1                                                             #   103/236
GETCHAR LF@tmp LF@s LF@i                                                        #   104/236
STRI2INT LF@%retval LF@tmp int@0                                                #   105/236
LABEL $asc$epilog                                                               #   106/236
POPFRAME                                                                        #   107/236
RETURN                                                                          #   108/236
LABEL $chr                                                                      #   109/236
PUSHFRAME                                                                       #   110/236
DEFVAR LF@%retval                                                               #   111/236
MOVE LF@%retval string@                                                         #   112/236
DEFVAR LF@tmp                                                                   #   113/236
MOVE LF@tmp string@                                                             #   114/236
INT2CHAR LF@%retval LF@i                                                        #   115/236
POPFRAME                                                                        #   116/236
RETURN                                                                          #   117/236
LABEL $$main                                                                    #   118/236
CREATEFRAME                                                                     #   119/236
PUSHFRAME                                                                       #   120/236
DEFVAR LF@&a                                                                    #   121/236
MOVE LF@&a string@Enter\032number\032of\032rows\010                             #   122/236
WRITE LF@&a                                                                     #   123/236
DEFVAR LF@rows                                                                  #   124/236
MOVE LF@rows int@0                                                              #   125/236
WRITE string@?\032                                                              #   126/236
READ LF@rows int                                                                #   127/236
DEFVAR LF@&b                                                                    #   128/236
MOVE LF@&b string@\010                                                          #   129/236
WRITE LF@&b                                                                     #   130/236
DEFVAR LF@i                                                                     #   131/236
DEFVAR LF@&c                                                                    #   132/236
MOVE LF@&c int@1                                                                #   133/236
MOVE LF@i LF@&c                                                                 #   134/236
DEFVAR LF@j                                                                     #   135/236
DEFVAR LF@&d                                                                    #   136/236
MOVE LF@&d int@1                                                                #   137/236
MOVE LF@j LF@&d                                                                 #   138/236
LABEL $a                                                                        #   139/236
CREATEFRAME                                                                     #   140/236
DEFVAR TF@rows                                                                  #   141/236
MOVE TF@rows LF@rows                                                            #   142/236
DEFVAR TF@i                                                                     #   143/236
MOVE TF@i LF@i                                                                  #   144/236
DEFVAR TF@j                                                                     #   145/236
MOVE TF@j LF@j                                                                  #   146/236
PUSHFRAME                                                                       #   147/236
DEFVAR LF@&e                                                                    #   148/236
MOVE LF@&e LF@i                                                                 #   149/236
PUSHS LF@&e                                                                     #   150/236
MOVE LF@&e LF@rows                                                              #   151/236
PUSHS LF@&e                                                                     #   152/236
DEFVAR LF@&f                                                                    #   153/236
DEFVAR LF@&g                                                                    #   154/236
POPS LF@&f                                                                      #   155/236
POPS LF@&g                                                                      #   156/236
PUSHS LF@&g                                                                     #   157/236
PUSHS LF@&f                                                                     #   158/236
PUSHS LF@&g                                                                     #   159/236
PUSHS LF@&f                                                                     #   160/236
LTS                                                                             #   161/236
POPS LF@&f                                                                      #   162/236
EQS                                                                             #   163/236
PUSHS LF@&f                                                                     #   164/236
ORS                                                                             #   165/236
POPS LF@&e                                                                      #   166/236
JUMPIFNEQ $b bool@true LF@&e                                                    #   167/236
DEFVAR LF@&h                                                                    #   168/236
MOVE LF@&h int@1                                                                #   169/236
MOVE LF@j LF@&h                                                                 #   170/236
LABEL $c                                                                        #   171/236
CREATEFRAME                                                                     #   172/236
DEFVAR TF@rows                                                                  #   173/236
MOVE TF@rows LF@rows                                                            #   174/236
DEFVAR TF@i                                                                     #   175/236
MOVE TF@i LF@i                                                                  #   176/236
DEFVAR TF@j                                                                     #   177/236
MOVE TF@j LF@j                                                                  #   178/236
PUSHFRAME                                                                       #   179/236
DEFVAR LF@&i                                                                    #   180/236
MOVE LF@&i LF@j                                                                 #   181/236
PUSHS LF@&i                                                                     #   182/236
MOVE LF@&i LF@i                                                                 #   183/236
PUSHS LF@&i                                                                     #   184/236
DEFVAR LF@&j                                                                    #   185/236
DEFVAR LF@&k                                                                    #   186/236
POPS LF@&j                                                                      #   187/236
POPS LF@&k                                                                      #   188/236
PUSHS LF@&k                                                                     #   189/236
PUSHS LF@&j                                                                     #   190/236
PUSHS LF@&k                                                                     #   191/236
PUSHS LF@&j                                                                     #   192/236
LTS                                                                             #   193/236
POPS LF@&j                                                                      #   194/236
EQS                                                                             #   195/236
PUSHS LF@&j                                                                     #   196/236
ORS                                                                             #   197/236
POPS LF@&i                                                                      #   198/236
JUMPIFNEQ $d bool@true LF@&i                                                    #   199/236
DEFVAR LF@&l                                                                    #   200/236
MOVE LF@&l LF@j                                                                 #   201/236
WRITE LF@&l                                                                     #   202/236
DEFVAR LF@&m                                                                    #   203/236
MOVE LF@&m LF@j                                                                 #   204/236
PUSHS LF@&m                                                                     #   205/236
MOVE LF@&m int@1                                                                #   206/236
PUSHS LF@&m                                                                     #   207/236
ADDS                                                                            #   208/236
POPS LF@&m                                                                      #   209/236
MOVE LF@j LF@&m                                                                 #   210/236
POPFRAME                                                                        #   211/236
MOVE LF@rows TF@rows                                                            #   212/236
MOVE LF@i TF@i                                                                  #   213/236
MOVE LF@j TF@j                                                                  #   214/236
JUMP $c                                                                         #   215/236
LABEL $d                                                                        #   216/236
POPFRAME                                                                        #   217/236
DEFVAR LF@&n                                                                    #   218/236
MOVE LF@&n string@\010                                                          #   219/236
WRITE LF@&n                                                                     #   220/236
DEFVAR LF@&o                                                                    #   221/236
MOVE LF@&o LF@i                                                                 #   222/236
PUSHS LF@&o                                                                     #   223/236
MOVE LF@&o int@1                                                                #   224/236
PUSHS LF@&o                                                                     #   225/236
ADDS                                                                            #   226/236
POPS LF@&o                                                                      #   227/236
MOVE LF@i LF@&o                                                                 #   228/236
POPFRAME                                                                        #   229/236
MOVE LF@rows TF@rows                                                            #   230/236
MOVE LF@i TF@i                                                                  #   231/236
MOVE LF@j TF@j                                                                  #   232/236
JUMP $a                                                                         #   233/236
LABEL $b                                                                        #   234/236
POPFRAME                                                                        #   235/236
POPFRAME                                                                        #   236/236

