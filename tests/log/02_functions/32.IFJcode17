# 2017-12-02 16:01:30.408693
# SECTION: 02_functions
# TEST: 32
# INFO: Double constant into build-in function
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: 
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# Everything is OK
# 
# INTERPRETER STDERR:
# Executing instruction: IJUMP at line: 2 with following arguments:
# Executing instruction: ILABEL at line: 118 with following arguments:
# Executing instruction: ICREATEFRAME at line: 119 with following arguments:
# Executing instruction: IPUSHFRAME at line: 120 with following arguments:
# Executing instruction: IDEFVAR at line: 121 with following arguments:
# Dest: LF@a
# Executing instruction: IDEFVAR at line: 122 with following arguments:
# Dest: LF@&a
# Executing instruction: IMOVE at line: 123 with following arguments:
# Arg1: Const@=3(double)
# Dest: LF@&a()
# Executing instruction: IMOVE at line: 124 with following arguments:
# Arg1: LF@&a=3(double)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 125 with following arguments:
# Dest: LF@i
# Executing instruction: IMOVE at line: 126 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@i()
# Executing instruction: IDEFVAR at line: 127 with following arguments:
# Dest: LF@j
# Executing instruction: IMOVE at line: 128 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@j()
# Executing instruction: ICREATEFRAME at line: 129 with following arguments:
# Executing instruction: IDEFVAR at line: 130 with following arguments:
# Dest: TF@s
# Executing instruction: IMOVE at line: 131 with following arguments:
# Arg1: Const@=gzgfggffg(string)
# Dest: TF@s()
# Executing instruction: IDEFVAR at line: 132 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 133 with following arguments:
# Arg1: LF@a=3(double)
# Dest: TF@i()
# Executing instruction: IFLOAT2R2EINT at line: 134 with following arguments:
# Arg1: TF@i=3(double)
# Dest: TF@i=3(double)
# Executing instruction: ICALL at line: 135 with following arguments:
# Executing instruction: ILABEL at line: 76 with following arguments:
# Executing instruction: IPUSHFRAME at line: 77 with following arguments:
# Executing instruction: IDEFVAR at line: 78 with following arguments:
# Dest: LF@%retval
# Executing instruction: IMOVE at line: 79 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@%retval()
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: LF@result
# Executing instruction: IMOVE at line: 81 with following arguments:
# Arg1: Const@=false(bool)
# Dest: LF@result()
# Executing instruction: IDEFVAR at line: 82 with following arguments:
# Dest: LF@tmp
# Executing instruction: IDEFVAR at line: 83 with following arguments:
# Dest: LF@tmp2
# Executing instruction: IMOVE at line: 84 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@tmp()
# Executing instruction: IMOVE at line: 85 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@tmp2()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: LF@i=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 87 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 88 with following arguments:
# Arg1: LF@i=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 89 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 90 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 91 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@result=false(bool)
# Executing instruction: ILSS at line: 92 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 93 with following arguments:
# Arg1: LF@result=false(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 94 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 95 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@result=false(bool)
# Executing instruction: IJUMPIFEQ at line: 96 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@result=false(bool)
# Executing instruction: IPUSHS at line: 97 with following arguments:
# Arg1: LF@i=3(int)
# Dest: Stack@()
# Executing instruction: ISTRLEN at line: 98 with following arguments:
# Arg1: LF@s=gzgfggffg(string)
# Dest: LF@tmp2=0(int)
# Executing instruction: IPUSHS at line: 99 with following arguments:
# Arg1: LF@tmp2=9(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 100 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 101 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@result=false(bool)
# Executing instruction: IJUMPIFEQ at line: 102 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@result=false(bool)
# Executing instruction: ISUB at line: 103 with following arguments:
# Arg1: LF@i=3(int)
# Arg2: Const@=1(int)
# Dest: LF@i=3(int)
# Executing instruction: IGETCHAR at line: 104 with following arguments:
# Arg1: LF@s=gzgfggffg(string)
# Arg2: LF@i=2(int)
# Dest: LF@tmp=(string)
# Executing instruction: ISTRI2INT at line: 105 with following arguments:
# Arg1: LF@tmp=g(string)
# Arg2: Const@=0(int)
# Dest: LF@%retval=0(int)
# Executing instruction: ILABEL at line: 106 with following arguments:
# Executing instruction: IPOPFRAME at line: 107 with following arguments:
# Executing instruction: IRETURN at line: 108 with following arguments:
# Executing instruction: IMOVE at line: 136 with following arguments:
# Arg1: TF@%retval=103(int)
# Dest: LF@i=0(int)
# Executing instruction: ICREATEFRAME at line: 137 with following arguments:
# Executing instruction: IDEFVAR at line: 138 with following arguments:
# Dest: TF@s
# Executing instruction: IMOVE at line: 139 with following arguments:
# Arg1: Const@=ERTZUG(string)
# Dest: TF@s()
# Executing instruction: IDEFVAR at line: 140 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 141 with following arguments:
# Arg1: Const@=3(int)
# Dest: TF@i()
# Executing instruction: ICALL at line: 142 with following arguments:
# Executing instruction: ILABEL at line: 76 with following arguments:
# Executing instruction: IPUSHFRAME at line: 77 with following arguments:
# Executing instruction: IDEFVAR at line: 78 with following arguments:
# Dest: LF@%retval
# Executing instruction: IMOVE at line: 79 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@%retval()
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: LF@result
# Executing instruction: IMOVE at line: 81 with following arguments:
# Arg1: Const@=false(bool)
# Dest: LF@result()
# Executing instruction: IDEFVAR at line: 82 with following arguments:
# Dest: LF@tmp
# Executing instruction: IDEFVAR at line: 83 with following arguments:
# Dest: LF@tmp2
# Executing instruction: IMOVE at line: 84 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@tmp()
# Executing instruction: IMOVE at line: 85 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@tmp2()
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: LF@i=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 87 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 88 with following arguments:
# Arg1: LF@i=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 89 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 90 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 91 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@result=false(bool)
# Executing instruction: ILSS at line: 92 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 93 with following arguments:
# Arg1: LF@result=false(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 94 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 95 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@result=false(bool)
# Executing instruction: IJUMPIFEQ at line: 96 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@result=false(bool)
# Executing instruction: IPUSHS at line: 97 with following arguments:
# Arg1: LF@i=3(int)
# Dest: Stack@()
# Executing instruction: ISTRLEN at line: 98 with following arguments:
# Arg1: LF@s=ERTZUG(string)
# Dest: LF@tmp2=0(int)
# Executing instruction: IPUSHS at line: 99 with following arguments:
# Arg1: LF@tmp2=6(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 100 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 101 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@result=false(bool)
# Executing instruction: IJUMPIFEQ at line: 102 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@result=false(bool)
# Executing instruction: ISUB at line: 103 with following arguments:
# Arg1: LF@i=3(int)
# Arg2: Const@=1(int)
# Dest: LF@i=3(int)
# Executing instruction: IGETCHAR at line: 104 with following arguments:
# Arg1: LF@s=ERTZUG(string)
# Arg2: LF@i=2(int)
# Dest: LF@tmp=(string)
# Executing instruction: ISTRI2INT at line: 105 with following arguments:
# Arg1: LF@tmp=T(string)
# Arg2: Const@=0(int)
# Dest: LF@%retval=0(int)
# Executing instruction: ILABEL at line: 106 with following arguments:
# Executing instruction: IPOPFRAME at line: 107 with following arguments:
# Executing instruction: IRETURN at line: 108 with following arguments:
# Executing instruction: IMOVE at line: 143 with following arguments:
# Arg1: TF@%retval=84(int)
# Dest: LF@j=0(int)
# Executing instruction: IDEFVAR at line: 144 with following arguments:
# Dest: LF@&b
# Executing instruction: IMOVE at line: 145 with following arguments:
# Arg1: LF@i=103(int)
# Dest: LF@&b()
# Executing instruction: IWRITE at line: 146 with following arguments:
# Arg1: LF@&b=103(int)
# Executing instruction: IDEFVAR at line: 147 with following arguments:
# Dest: LF@&c
# Executing instruction: IMOVE at line: 148 with following arguments:
# Arg1: LF@j=84(int)
# Dest: LF@&c()
# Executing instruction: IWRITE at line: 149 with following arguments:
# Arg1: LF@&c=84(int)
# Executing instruction: IPOPFRAME at line: 150 with following arguments:
# Executing instruction: IGROOT at line: 152 with following arguments:
# I am Groot at 152 (626).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 626 (168+458)
# GROOT: 626
# 
#   1: ' Double constant into build-in function
#   2: 
#   3: scope
#   4:     dim a as double = 3.0
#   5:     
#   6:     dim i as integer
#   7:     dim j as integer
#   8:     i = asc(!"gzgfggffg", a)
#   9:     j = asc(!"ERTZUG", 3.0)
#  10: 
#  11:     print i; j;
#  12:     
#  13: end scope

########################################

.IFJcode17                                                                      #     1/150
JUMP $$main                                                                     #     2/150
LABEL $length                                                                   #     3/150
PUSHFRAME                                                                       #     4/150
DEFVAR LF@%retval                                                               #     5/150
MOVE LF@%retval int@0                                                           #     6/150
STRLEN LF@%retval LF@s                                                          #     7/150
LABEL $length$epilog                                                            #     8/150
POPFRAME                                                                        #     9/150
RETURN                                                                          #    10/150
LABEL $substr                                                                   #    11/150
PUSHFRAME                                                                       #    12/150
DEFVAR LF@%retval                                                               #    13/150
MOVE LF@%retval string@                                                         #    14/150
DEFVAR LF@tmp1                                                                  #    15/150
DEFVAR LF@tmp2                                                                  #    16/150
MOVE LF@tmp1 int@0                                                              #    17/150
MOVE LF@tmp2 string@                                                            #    18/150
SUB LF@tmp1 LF@i int@1                                                          #    19/150
DEFVAR LF@length                                                                #    20/150
MOVE LF@length int@0                                                            #    21/150
DEFVAR LF@result                                                                #    22/150
MOVE LF@result bool@false                                                       #    23/150
DEFVAR LF@tmplen                                                                #    24/150
MOVE LF@tmplen int@0                                                            #    25/150
STRLEN LF@tmplen LF@s                                                           #    26/150
SUB LF@tmplen LF@tmplen LF@i                                                    #    27/150
ADD LF@tmplen LF@tmplen int@1                                                   #    28/150
JUMPIFEQ $SubStrReturn0 LF@s LF@tmp2                                            #    29/150
PUSHS LF@i                                                                      #    30/150
PUSHS int@0                                                                     #    31/150
PUSHS LF@i                                                                      #    32/150
PUSHS int@0                                                                     #    33/150
EQS                                                                             #    34/150
POPS LF@result                                                                  #    35/150
LTS                                                                             #    36/150
PUSHS LF@result                                                                 #    37/150
ORS                                                                             #    38/150
POPS LF@result                                                                  #    39/150
JUMPIFEQ $SubStrReturn0 bool@true LF@result                                     #    40/150
PUSHS LF@n                                                                      #    41/150
PUSHS int@0                                                                     #    42/150
LTS                                                                             #    43/150
POPS LF@result                                                                  #    44/150
JUMPIFEQ $SubStrReturnRest bool@true LF@result                                  #    45/150
STRLEN LF@tmplen LF@s                                                           #    46/150
SUB LF@tmplen LF@tmplen LF@i                                                    #    47/150
ADD LF@tmplen LF@tmplen int@1                                                   #    48/150
PUSHS LF@tmplen                                                                 #    49/150
PUSHS LF@n                                                                      #    50/150
LTS                                                                             #    51/150
POPS LF@result                                                                  #    52/150
JUMPIFEQ $SubStrReturnRest bool@true LF@result                                  #    53/150
MOVE LF@tmplen int@0                                                            #    54/150
STRLEN LF@tmplen LF@s                                                           #    55/150
SUB LF@tmplen LF@tmplen LF@i                                                    #    56/150
LABEL $SubStrFor                                                                #    57/150
GETCHAR LF@tmp2 LF@s LF@tmp1                                                    #    58/150
CONCAT LF@%retval LF@%retval LF@tmp2                                            #    59/150
ADD LF@tmp1 LF@tmp1 int@1                                                       #    60/150
STRLEN LF@length LF@%retval                                                     #    61/150
JUMPIFNEQ $SubStrFor LF@length LF@n                                             #    62/150
JUMP $substr$epilog                                                             #    63/150
LABEL $SubStrReturn0                                                            #    64/150
MOVE LF@%retval string@                                                         #    65/150
JUMP $substr$epilog                                                             #    66/150
LABEL $SubStrReturnRest                                                         #    67/150
GETCHAR LF@tmp2 LF@s LF@tmp1                                                    #    68/150
CONCAT LF@%retval LF@%retval LF@tmp2                                            #    69/150
ADD LF@tmp1 LF@tmp1 int@1                                                       #    70/150
STRLEN LF@length LF@%retval                                                     #    71/150
JUMPIFNEQ $SubStrReturnRest LF@tmplen LF@length                                 #    72/150
LABEL $substr$epilog                                                            #    73/150
POPFRAME                                                                        #    74/150
RETURN                                                                          #    75/150
LABEL $asc                                                                      #    76/150
PUSHFRAME                                                                       #    77/150
DEFVAR LF@%retval                                                               #    78/150
MOVE LF@%retval int@0                                                           #    79/150
DEFVAR LF@result                                                                #    80/150
MOVE LF@result bool@false                                                       #    81/150
DEFVAR LF@tmp                                                                   #    82/150
DEFVAR LF@tmp2                                                                  #    83/150
MOVE LF@tmp string@                                                             #    84/150
MOVE LF@tmp2 int@0                                                              #    85/150
PUSHS LF@i                                                                      #    86/150
PUSHS int@0                                                                     #    87/150
PUSHS LF@i                                                                      #    88/150
PUSHS int@0                                                                     #    89/150
EQS                                                                             #    90/150
POPS LF@result                                                                  #    91/150
LTS                                                                             #    92/150
PUSHS LF@result                                                                 #    93/150
ORS                                                                             #    94/150
POPS LF@result                                                                  #    95/150
JUMPIFEQ $asc$epilog bool@true LF@result                                        #    96/150
PUSHS LF@i                                                                      #    97/150
STRLEN LF@tmp2 LF@s                                                             #    98/150
PUSHS LF@tmp2                                                                   #    99/150
GTS                                                                             #   100/150
POPS LF@result                                                                  #   101/150
JUMPIFEQ $asc$epilog bool@true LF@result                                        #   102/150
SUB LF@i LF@i int@1                                                             #   103/150
GETCHAR LF@tmp LF@s LF@i                                                        #   104/150
STRI2INT LF@%retval LF@tmp int@0                                                #   105/150
LABEL $asc$epilog                                                               #   106/150
POPFRAME                                                                        #   107/150
RETURN                                                                          #   108/150
LABEL $chr                                                                      #   109/150
PUSHFRAME                                                                       #   110/150
DEFVAR LF@%retval                                                               #   111/150
MOVE LF@%retval string@                                                         #   112/150
DEFVAR LF@tmp                                                                   #   113/150
MOVE LF@tmp string@                                                             #   114/150
INT2CHAR LF@%retval LF@i                                                        #   115/150
POPFRAME                                                                        #   116/150
RETURN                                                                          #   117/150
LABEL $$main                                                                    #   118/150
CREATEFRAME                                                                     #   119/150
PUSHFRAME                                                                       #   120/150
DEFVAR LF@a                                                                     #   121/150
DEFVAR LF@&a                                                                    #   122/150
MOVE LF@&a float@3                                                              #   123/150
MOVE LF@a LF@&a                                                                 #   124/150
DEFVAR LF@i                                                                     #   125/150
MOVE LF@i int@0                                                                 #   126/150
DEFVAR LF@j                                                                     #   127/150
MOVE LF@j int@0                                                                 #   128/150
CREATEFRAME                                                                     #   129/150
DEFVAR TF@s                                                                     #   130/150
MOVE TF@s string@gzgfggffg                                                      #   131/150
DEFVAR TF@i                                                                     #   132/150
MOVE TF@i LF@a                                                                  #   133/150
FLOAT2R2EINT TF@i TF@i                                                          #   134/150
CALL $asc                                                                       #   135/150
MOVE LF@i TF@%retval                                                            #   136/150
CREATEFRAME                                                                     #   137/150
DEFVAR TF@s                                                                     #   138/150
MOVE TF@s string@ERTZUG                                                         #   139/150
DEFVAR TF@i                                                                     #   140/150
MOVE TF@i int@3                                                                 #   141/150
CALL $asc                                                                       #   142/150
MOVE LF@j TF@%retval                                                            #   143/150
DEFVAR LF@&b                                                                    #   144/150
MOVE LF@&b LF@i                                                                 #   145/150
WRITE LF@&b                                                                     #   146/150
DEFVAR LF@&c                                                                    #   147/150
MOVE LF@&c LF@j                                                                 #   148/150
WRITE LF@&c                                                                     #   149/150
POPFRAME                                                                        #   150/150

