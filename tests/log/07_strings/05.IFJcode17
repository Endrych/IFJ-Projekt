# 2017-11-30 22:56:48.819638
# SECTION: 07_strings
# TEST: 05
# INFO: chr builtin function
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: 
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# Everything is OK
# 
# INTERPRETER STDERR:
# Executing instruction: IJUMP at line: 2 with following arguments:
# Executing instruction: ILABEL at line: 118 with following arguments:
# Executing instruction: ICREATEFRAME at line: 119 with following arguments:
# Executing instruction: IPUSHFRAME at line: 120 with following arguments:
# Executing instruction: IDEFVAR at line: 121 with following arguments:
# Dest: LF@res
# Executing instruction: IMOVE at line: 122 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@res()
# Executing instruction: IDEFVAR at line: 123 with following arguments:
# Dest: LF@tmp
# Executing instruction: IMOVE at line: 124 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@tmp()
# Executing instruction: IDEFVAR at line: 125 with following arguments:
# Dest: LF@&a
# Executing instruction: IMOVE at line: 126 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@&a()
# Executing instruction: IPUSHS at line: 127 with following arguments:
# Arg1: LF@&a=0(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 128 with following arguments:
# Arg1: Const@=10(int)
# Dest: LF@&a=0(int)
# Executing instruction: IPUSHS at line: 129 with following arguments:
# Arg1: LF@&a=10(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 130 with following arguments:
# Arg1: Stack@=0(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 131 with following arguments:
# Arg1: Stack@=-10(int)
# Dest: LF@&a=10(int)
# Executing instruction: IMOVE at line: 132 with following arguments:
# Arg1: LF@&a=-10(int)
# Dest: LF@tmp=0(int)
# Executing instruction: ICREATEFRAME at line: 133 with following arguments:
# Executing instruction: IDEFVAR at line: 134 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 135 with following arguments:
# Arg1: Const@=119(int)
# Dest: TF@i()
# Executing instruction: ICALL at line: 136 with following arguments:
# Executing instruction: ILABEL at line: 109 with following arguments:
# Executing instruction: IPUSHFRAME at line: 110 with following arguments:
# Executing instruction: IDEFVAR at line: 111 with following arguments:
# Dest: LF@%retval
# Executing instruction: IMOVE at line: 112 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@%retval()
# Executing instruction: IDEFVAR at line: 113 with following arguments:
# Dest: LF@tmp
# Executing instruction: IMOVE at line: 114 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@tmp()
# Executing instruction: IINT2CHAR at line: 115 with following arguments:
# Arg1: LF@i=119(int)
# Dest: LF@%retval=(string)
# Executing instruction: IPOPFRAME at line: 116 with following arguments:
# Executing instruction: IRETURN at line: 117 with following arguments:
# Executing instruction: IMOVE at line: 137 with following arguments:
# Arg1: TF@%retval=w(string)
# Dest: LF@res=(string)
# Executing instruction: IDEFVAR at line: 138 with following arguments:
# Dest: LF@&b
# Executing instruction: IMOVE at line: 139 with following arguments:
# Arg1: LF@res=w(string)
# Dest: LF@&b()
# Executing instruction: IWRITE at line: 140 with following arguments:
# Arg1: LF@&b=w(string)
# Executing instruction: ICREATEFRAME at line: 141 with following arguments:
# Executing instruction: IDEFVAR at line: 142 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 143 with following arguments:
# Arg1: Const@=40(int)
# Dest: TF@i()
# Executing instruction: ICALL at line: 144 with following arguments:
# Executing instruction: ILABEL at line: 109 with following arguments:
# Executing instruction: IPUSHFRAME at line: 110 with following arguments:
# Executing instruction: IDEFVAR at line: 111 with following arguments:
# Dest: LF@%retval
# Executing instruction: IMOVE at line: 112 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@%retval()
# Executing instruction: IDEFVAR at line: 113 with following arguments:
# Dest: LF@tmp
# Executing instruction: IMOVE at line: 114 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@tmp()
# Executing instruction: IINT2CHAR at line: 115 with following arguments:
# Arg1: LF@i=40(int)
# Dest: LF@%retval=(string)
# Executing instruction: IPOPFRAME at line: 116 with following arguments:
# Executing instruction: IRETURN at line: 117 with following arguments:
# Executing instruction: IMOVE at line: 145 with following arguments:
# Arg1: TF@%retval=((string)
# Dest: LF@res=w(string)
# Executing instruction: IDEFVAR at line: 146 with following arguments:
# Dest: LF@&c
# Executing instruction: IMOVE at line: 147 with following arguments:
# Arg1: LF@res=((string)
# Dest: LF@&c()
# Executing instruction: IWRITE at line: 148 with following arguments:
# Arg1: LF@&c=((string)
# Executing instruction: ICREATEFRAME at line: 149 with following arguments:
# Executing instruction: IDEFVAR at line: 150 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 151 with following arguments:
# Arg1: Const@=41(int)
# Dest: TF@i()
# Executing instruction: ICALL at line: 152 with following arguments:
# Executing instruction: ILABEL at line: 109 with following arguments:
# Executing instruction: IPUSHFRAME at line: 110 with following arguments:
# Executing instruction: IDEFVAR at line: 111 with following arguments:
# Dest: LF@%retval
# Executing instruction: IMOVE at line: 112 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@%retval()
# Executing instruction: IDEFVAR at line: 113 with following arguments:
# Dest: LF@tmp
# Executing instruction: IMOVE at line: 114 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@tmp()
# Executing instruction: IINT2CHAR at line: 115 with following arguments:
# Arg1: LF@i=41(int)
# Dest: LF@%retval=(string)
# Executing instruction: IPOPFRAME at line: 116 with following arguments:
# Executing instruction: IRETURN at line: 117 with following arguments:
# Executing instruction: IMOVE at line: 153 with following arguments:
# Arg1: TF@%retval=)(string)
# Dest: LF@res=((string)
# Executing instruction: IDEFVAR at line: 154 with following arguments:
# Dest: LF@&d
# Executing instruction: IMOVE at line: 155 with following arguments:
# Arg1: LF@res=)(string)
# Dest: LF@&d()
# Executing instruction: IWRITE at line: 156 with following arguments:
# Arg1: LF@&d=)(string)
# Executing instruction: ICREATEFRAME at line: 157 with following arguments:
# Executing instruction: IDEFVAR at line: 158 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 159 with following arguments:
# Arg1: Const@=1(int)
# Dest: TF@i()
# Executing instruction: ICALL at line: 160 with following arguments:
# Executing instruction: ILABEL at line: 109 with following arguments:
# Executing instruction: IPUSHFRAME at line: 110 with following arguments:
# Executing instruction: IDEFVAR at line: 111 with following arguments:
# Dest: LF@%retval
# Executing instruction: IMOVE at line: 112 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@%retval()
# Executing instruction: IDEFVAR at line: 113 with following arguments:
# Dest: LF@tmp
# Executing instruction: IMOVE at line: 114 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@tmp()
# Executing instruction: IINT2CHAR at line: 115 with following arguments:
# Arg1: LF@i=1(int)
# Dest: LF@%retval=(string)
# Executing instruction: IPOPFRAME at line: 116 with following arguments:
# Executing instruction: IRETURN at line: 117 with following arguments:
# Executing instruction: IMOVE at line: 161 with following arguments:
# Arg1: TF@%retval=(string)
# Dest: LF@res=)(string)
# Executing instruction: IDEFVAR at line: 162 with following arguments:
# Dest: LF@&e
# Executing instruction: IMOVE at line: 163 with following arguments:
# Arg1: LF@res=(string)
# Dest: LF@&e()
# Executing instruction: IWRITE at line: 164 with following arguments:
# Arg1: LF@&e=(string)
# Executing instruction: IPOPFRAME at line: 165 with following arguments:
# Executing instruction: IGROOT at line: 167 with following arguments:
# I am Groot at 167 (446).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 446 (146+300)
# GROOT: 446
# 
#   1: ' chr builtin function
#   2: scope
#   3: 	dim res as string
#   4: 	dim tmp as integer
#   5: 	tmp = 0 - 10
#   6: 
#   7: 	res = chr(119)
#   8: 	print res;
#   9: 	res = chr(40)
#  10: 	print res;
#  11: 	res = chr(41.25)
#  12: 	print res;
#  13: 	res = chr(1)
#  14: 	print res;
#  15: 	
#  16: end scope

########################################

.IFJcode17                                                                      #     1/165
JUMP $$main                                                                     #     2/165
LABEL $length                                                                   #     3/165
PUSHFRAME                                                                       #     4/165
DEFVAR LF@%retval                                                               #     5/165
MOVE LF@%retval int@0                                                           #     6/165
STRLEN LF@%retval LF@s                                                          #     7/165
LABEL $length$epilog                                                            #     8/165
POPFRAME                                                                        #     9/165
RETURN                                                                          #    10/165
LABEL $substr                                                                   #    11/165
PUSHFRAME                                                                       #    12/165
DEFVAR LF@%retval                                                               #    13/165
MOVE LF@%retval string@                                                         #    14/165
DEFVAR LF@tmp1                                                                  #    15/165
DEFVAR LF@tmp2                                                                  #    16/165
MOVE LF@tmp1 int@0                                                              #    17/165
MOVE LF@tmp2 string@                                                            #    18/165
SUB LF@tmp1 LF@i int@1                                                          #    19/165
DEFVAR LF@length                                                                #    20/165
MOVE LF@length int@0                                                            #    21/165
DEFVAR LF@result                                                                #    22/165
MOVE LF@result bool@false                                                       #    23/165
DEFVAR LF@tmplen                                                                #    24/165
MOVE LF@tmplen int@0                                                            #    25/165
STRLEN LF@tmplen LF@s                                                           #    26/165
SUB LF@tmplen LF@tmplen LF@i                                                    #    27/165
ADD LF@tmplen LF@tmplen int@1                                                   #    28/165
JUMPIFEQ $SubStrReturn0 LF@s LF@tmp2                                            #    29/165
PUSHS LF@i                                                                      #    30/165
PUSHS int@0                                                                     #    31/165
PUSHS LF@i                                                                      #    32/165
PUSHS int@0                                                                     #    33/165
EQS                                                                             #    34/165
POPS LF@result                                                                  #    35/165
LTS                                                                             #    36/165
PUSHS LF@result                                                                 #    37/165
ORS                                                                             #    38/165
POPS LF@result                                                                  #    39/165
JUMPIFEQ $SubStrReturn0 bool@true LF@result                                     #    40/165
PUSHS LF@n                                                                      #    41/165
PUSHS int@0                                                                     #    42/165
LTS                                                                             #    43/165
POPS LF@result                                                                  #    44/165
JUMPIFEQ $SubStrReturnRest bool@true LF@result                                  #    45/165
STRLEN LF@tmplen LF@s                                                           #    46/165
SUB LF@tmplen LF@tmplen LF@i                                                    #    47/165
ADD LF@tmplen LF@tmplen int@1                                                   #    48/165
PUSHS LF@tmplen                                                                 #    49/165
PUSHS LF@n                                                                      #    50/165
LTS                                                                             #    51/165
POPS LF@result                                                                  #    52/165
JUMPIFEQ $SubStrReturnRest bool@true LF@result                                  #    53/165
MOVE LF@tmplen int@0                                                            #    54/165
STRLEN LF@tmplen LF@s                                                           #    55/165
SUB LF@tmplen LF@tmplen LF@i                                                    #    56/165
LABEL $SubStrFor                                                                #    57/165
GETCHAR LF@tmp2 LF@s LF@tmp1                                                    #    58/165
CONCAT LF@%retval LF@%retval LF@tmp2                                            #    59/165
ADD LF@tmp1 LF@tmp1 int@1                                                       #    60/165
STRLEN LF@length LF@%retval                                                     #    61/165
JUMPIFNEQ $SubStrFor LF@length LF@n                                             #    62/165
JUMP $substr$epilog                                                             #    63/165
LABEL $SubStrReturn0                                                            #    64/165
MOVE LF@%retval string@                                                         #    65/165
JUMP $substr$epilog                                                             #    66/165
LABEL $SubStrReturnRest                                                         #    67/165
GETCHAR LF@tmp2 LF@s LF@tmp1                                                    #    68/165
CONCAT LF@%retval LF@%retval LF@tmp2                                            #    69/165
ADD LF@tmp1 LF@tmp1 int@1                                                       #    70/165
STRLEN LF@length LF@%retval                                                     #    71/165
JUMPIFNEQ $SubStrReturnRest LF@tmplen LF@length                                 #    72/165
LABEL $substr$epilog                                                            #    73/165
POPFRAME                                                                        #    74/165
RETURN                                                                          #    75/165
LABEL $asc                                                                      #    76/165
PUSHFRAME                                                                       #    77/165
DEFVAR LF@%retval                                                               #    78/165
MOVE LF@%retval int@0                                                           #    79/165
DEFVAR LF@result                                                                #    80/165
MOVE LF@result bool@false                                                       #    81/165
DEFVAR LF@tmp                                                                   #    82/165
DEFVAR LF@tmp2                                                                  #    83/165
MOVE LF@tmp string@                                                             #    84/165
MOVE LF@tmp2 int@0                                                              #    85/165
PUSHS LF@i                                                                      #    86/165
PUSHS int@0                                                                     #    87/165
PUSHS LF@i                                                                      #    88/165
PUSHS int@0                                                                     #    89/165
EQS                                                                             #    90/165
POPS LF@result                                                                  #    91/165
LTS                                                                             #    92/165
PUSHS LF@result                                                                 #    93/165
ORS                                                                             #    94/165
POPS LF@result                                                                  #    95/165
JUMPIFEQ $asc$epilog bool@true LF@result                                        #    96/165
PUSHS LF@i                                                                      #    97/165
STRLEN LF@tmp2 LF@s                                                             #    98/165
PUSHS LF@tmp2                                                                   #    99/165
GTS                                                                             #   100/165
POPS LF@result                                                                  #   101/165
JUMPIFEQ $asc$epilog bool@true LF@result                                        #   102/165
SUB LF@i LF@i int@1                                                             #   103/165
GETCHAR LF@tmp LF@s LF@i                                                        #   104/165
STRI2INT LF@%retval LF@tmp int@0                                                #   105/165
LABEL $asc$epilog                                                               #   106/165
POPFRAME                                                                        #   107/165
RETURN                                                                          #   108/165
LABEL $chr                                                                      #   109/165
PUSHFRAME                                                                       #   110/165
DEFVAR LF@%retval                                                               #   111/165
MOVE LF@%retval string@                                                         #   112/165
DEFVAR LF@tmp                                                                   #   113/165
MOVE LF@tmp string@                                                             #   114/165
INT2CHAR LF@%retval LF@i                                                        #   115/165
POPFRAME                                                                        #   116/165
RETURN                                                                          #   117/165
LABEL $$main                                                                    #   118/165
CREATEFRAME                                                                     #   119/165
PUSHFRAME                                                                       #   120/165
DEFVAR LF@res                                                                   #   121/165
MOVE LF@res string@                                                             #   122/165
DEFVAR LF@tmp                                                                   #   123/165
MOVE LF@tmp int@0                                                               #   124/165
DEFVAR LF@&a                                                                    #   125/165
MOVE LF@&a int@0                                                                #   126/165
PUSHS LF@&a                                                                     #   127/165
MOVE LF@&a int@10                                                               #   128/165
PUSHS LF@&a                                                                     #   129/165
SUBS                                                                            #   130/165
POPS LF@&a                                                                      #   131/165
MOVE LF@tmp LF@&a                                                               #   132/165
CREATEFRAME                                                                     #   133/165
DEFVAR TF@i                                                                     #   134/165
MOVE TF@i int@119                                                               #   135/165
CALL $chr                                                                       #   136/165
MOVE LF@res TF@%retval                                                          #   137/165
DEFVAR LF@&b                                                                    #   138/165
MOVE LF@&b LF@res                                                               #   139/165
WRITE LF@&b                                                                     #   140/165
CREATEFRAME                                                                     #   141/165
DEFVAR TF@i                                                                     #   142/165
MOVE TF@i int@40                                                                #   143/165
CALL $chr                                                                       #   144/165
MOVE LF@res TF@%retval                                                          #   145/165
DEFVAR LF@&c                                                                    #   146/165
MOVE LF@&c LF@res                                                               #   147/165
WRITE LF@&c                                                                     #   148/165
CREATEFRAME                                                                     #   149/165
DEFVAR TF@i                                                                     #   150/165
MOVE TF@i int@41                                                                #   151/165
CALL $chr                                                                       #   152/165
MOVE LF@res TF@%retval                                                          #   153/165
DEFVAR LF@&d                                                                    #   154/165
MOVE LF@&d LF@res                                                               #   155/165
WRITE LF@&d                                                                     #   156/165
CREATEFRAME                                                                     #   157/165
DEFVAR TF@i                                                                     #   158/165
MOVE TF@i int@1                                                                 #   159/165
CALL $chr                                                                       #   160/165
MOVE LF@res TF@%retval                                                          #   161/165
DEFVAR LF@&e                                                                    #   162/165
MOVE LF@&e LF@res                                                               #   163/165
WRITE LF@&e                                                                     #   164/165
POPFRAME                                                                        #   165/165

