# 2017-11-30 22:56:48.904816
# SECTION: 07_strings
# TEST: 10
# INFO: combined input with builtin functions (TODO: stdout)
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: 
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# Everything is OK
# 
# INTERPRETER STDERR:
# Executing instruction: IJUMP at line: 2 with following arguments:
# Executing instruction: ILABEL at line: 118 with following arguments:
# Executing instruction: ICREATEFRAME at line: 119 with following arguments:
# Executing instruction: IPUSHFRAME at line: 120 with following arguments:
# Executing instruction: IDEFVAR at line: 121 with following arguments:
# Dest: LF@s1
# Executing instruction: IMOVE at line: 122 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@s1()
# Executing instruction: IDEFVAR at line: 123 with following arguments:
# Dest: LF@s2
# Executing instruction: IMOVE at line: 124 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@s2()
# Executing instruction: IDEFVAR at line: 125 with following arguments:
# Dest: LF@s1len
# Executing instruction: IMOVE at line: 126 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@s1len()
# Executing instruction: IDEFVAR at line: 127 with following arguments:
# Dest: LF@&a
# Executing instruction: IMOVE at line: 128 with following arguments:
# Arg1: Const@=Toto je nejaky text(string)
# Dest: LF@&a()
# Executing instruction: IMOVE at line: 129 with following arguments:
# Arg1: LF@&a=Toto je nejaky text(string)
# Dest: LF@s1=(string)
# Executing instruction: IDEFVAR at line: 130 with following arguments:
# Dest: LF@&b
# Executing instruction: IMOVE at line: 131 with following arguments:
# Arg1: LF@s1=Toto je nejaky text(string)
# Dest: LF@&b()
# Executing instruction: IPUSHS at line: 132 with following arguments:
# Arg1: LF@&b=Toto je nejaky text(string)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 133 with following arguments:
# Arg1: Const@=, ktery jeste trochu obohatime(string)
# Dest: LF@&b=Toto je nejaky text(string)
# Executing instruction: IPUSHS at line: 134 with following arguments:
# Arg1: LF@&b=, ktery jeste trochu obohatime(string)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 135 with following arguments:
# Dest: LF@&c
# Executing instruction: IDEFVAR at line: 136 with following arguments:
# Dest: LF@&d
# Executing instruction: IPOPS at line: 137 with following arguments:
# Arg1: Stack@=, ktery jeste trochu obohatime(string)
# Dest: LF@&c()
# Executing instruction: IPOPS at line: 138 with following arguments:
# Arg1: Stack@=Toto je nejaky text(string)
# Dest: LF@&d()
# Executing instruction: ICONCAT at line: 139 with following arguments:
# Arg1: LF@&d=Toto je nejaky text(string)
# Arg2: LF@&c=, ktery jeste trochu obohatime(string)
# Dest: LF@&b=, ktery jeste trochu obohatime(string)
# Executing instruction: IMOVE at line: 140 with following arguments:
# Arg1: LF@&b=Toto je nejaky text, ktery jeste trochu obohatime(string)
# Dest: LF@s2=(string)
# Executing instruction: IDEFVAR at line: 141 with following arguments:
# Dest: LF@&e
# Executing instruction: IMOVE at line: 142 with following arguments:
# Arg1: LF@s1=Toto je nejaky text(string)
# Dest: LF@&e()
# Executing instruction: IWRITE at line: 143 with following arguments:
# Arg1: LF@&e=Toto je nejaky text(string)
# Executing instruction: IDEFVAR at line: 144 with following arguments:
# Dest: LF@&f
# Executing instruction: IMOVE at line: 145 with following arguments:
# Arg1: Const@=
# (string)
# Dest: LF@&f()
# Executing instruction: IWRITE at line: 146 with following arguments:
# Arg1: LF@&f=
# (string)
# Executing instruction: IDEFVAR at line: 147 with following arguments:
# Dest: LF@&g
# Executing instruction: IMOVE at line: 148 with following arguments:
# Arg1: LF@s2=Toto je nejaky text, ktery jeste trochu obohatime(string)
# Dest: LF@&g()
# Executing instruction: IWRITE at line: 149 with following arguments:
# Arg1: LF@&g=Toto je nejaky text, ktery jeste trochu obohatime(string)
# Executing instruction: IDEFVAR at line: 150 with following arguments:
# Dest: LF@&h
# Executing instruction: IMOVE at line: 151 with following arguments:
# Arg1: Const@=
# (string)
# Dest: LF@&h()
# Executing instruction: IWRITE at line: 152 with following arguments:
# Arg1: LF@&h=
# (string)
# Executing instruction: ICREATEFRAME at line: 153 with following arguments:
# Executing instruction: IDEFVAR at line: 154 with following arguments:
# Dest: TF@s
# Executing instruction: IMOVE at line: 155 with following arguments:
# Arg1: LF@s1=Toto je nejaky text(string)
# Dest: TF@s()
# Executing instruction: ICALL at line: 156 with following arguments:
# Executing instruction: ILABEL at line: 3 with following arguments:
# Executing instruction: IPUSHFRAME at line: 4 with following arguments:
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: LF@%retval
# Executing instruction: IMOVE at line: 6 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@%retval()
# Executing instruction: ISTRLEN at line: 7 with following arguments:
# Arg1: LF@s=Toto je nejaky text(string)
# Dest: LF@%retval=0(int)
# Executing instruction: ILABEL at line: 8 with following arguments:
# Executing instruction: IPOPFRAME at line: 9 with following arguments:
# Executing instruction: IRETURN at line: 10 with following arguments:
# Executing instruction: IMOVE at line: 157 with following arguments:
# Arg1: TF@%retval=19(int)
# Dest: LF@s1len=0(int)
# Executing instruction: IDEFVAR at line: 158 with following arguments:
# Dest: LF@&i
# Executing instruction: IMOVE at line: 159 with following arguments:
# Arg1: LF@s1len=19(int)
# Dest: LF@&i()
# Executing instruction: IPUSHS at line: 160 with following arguments:
# Arg1: LF@&i=19(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 161 with following arguments:
# Arg1: Const@=4(int)
# Dest: LF@&i=19(int)
# Executing instruction: IPUSHS at line: 162 with following arguments:
# Arg1: LF@&i=4(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 163 with following arguments:
# Arg1: Stack@=19(int)
# Arg2: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 164 with following arguments:
# Arg1: Const@=1(int)
# Dest: LF@&i=4(int)
# Executing instruction: IPUSHS at line: 165 with following arguments:
# Arg1: LF@&i=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 166 with following arguments:
# Arg1: Stack@=15(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 167 with following arguments:
# Arg1: Stack@=16(int)
# Dest: LF@&i=1(int)
# Executing instruction: IMOVE at line: 168 with following arguments:
# Arg1: LF@&i=16(int)
# Dest: LF@s1len=19(int)
# Executing instruction: ICREATEFRAME at line: 169 with following arguments:
# Executing instruction: IDEFVAR at line: 170 with following arguments:
# Dest: TF@s
# Executing instruction: IMOVE at line: 171 with following arguments:
# Arg1: LF@s2=Toto je nejaky text, ktery jeste trochu obohatime(string)
# Dest: TF@s()
# Executing instruction: IDEFVAR at line: 172 with following arguments:
# Dest: TF@i
# Executing instruction: IMOVE at line: 173 with following arguments:
# Arg1: LF@s1len=16(int)
# Dest: TF@i()
# Executing instruction: IDEFVAR at line: 174 with following arguments:
# Dest: TF@n
# Executing instruction: IMOVE at line: 175 with following arguments:
# Arg1: Const@=4(int)
# Dest: TF@n()
# Executing instruction: ICALL at line: 176 with following arguments:
# Executing instruction: ILABEL at line: 11 with following arguments:
# Executing instruction: IPUSHFRAME at line: 12 with following arguments:
# Executing instruction: IDEFVAR at line: 13 with following arguments:
# Dest: LF@%retval
# Executing instruction: IMOVE at line: 14 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@%retval()
# Executing instruction: IDEFVAR at line: 15 with following arguments:
# Dest: LF@tmp1
# Executing instruction: IDEFVAR at line: 16 with following arguments:
# Dest: LF@tmp2
# Executing instruction: IMOVE at line: 17 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@tmp1()
# Executing instruction: IMOVE at line: 18 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@tmp2()
# Executing instruction: ISUB at line: 19 with following arguments:
# Arg1: LF@i=16(int)
# Arg2: Const@=1(int)
# Dest: LF@tmp1=0(int)
# Executing instruction: IDEFVAR at line: 20 with following arguments:
# Dest: LF@length
# Executing instruction: IMOVE at line: 21 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@length()
# Executing instruction: IDEFVAR at line: 22 with following arguments:
# Dest: LF@result
# Executing instruction: IMOVE at line: 23 with following arguments:
# Arg1: Const@=false(bool)
# Dest: LF@result()
# Executing instruction: IDEFVAR at line: 24 with following arguments:
# Dest: LF@tmplen
# Executing instruction: IMOVE at line: 25 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@tmplen()
# Executing instruction: ISTRLEN at line: 26 with following arguments:
# Arg1: LF@s=Toto je nejaky text, ktery jeste trochu obohatime(string)
# Dest: LF@tmplen=0(int)
# Executing instruction: ISUB at line: 27 with following arguments:
# Arg1: LF@tmplen=49(int)
# Arg2: LF@i=16(int)
# Dest: LF@tmplen=49(int)
# Executing instruction: IADD at line: 28 with following arguments:
# Arg1: LF@tmplen=33(int)
# Arg2: Const@=1(int)
# Dest: LF@tmplen=33(int)
# Executing instruction: IJUMPIFEQ at line: 29 with following arguments:
# Arg1: LF@s=Toto je nejaky text, ktery jeste trochu obohatime(string)
# Arg2: LF@tmp2=(string)
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: LF@i=16(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 31 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 32 with following arguments:
# Arg1: LF@i=16(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 34 with following arguments:
# Arg1: Stack@=16(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 35 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@result=false(bool)
# Executing instruction: ILSS at line: 36 with following arguments:
# Arg1: Stack@=16(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 37 with following arguments:
# Arg1: LF@result=false(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 38 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 39 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@result=false(bool)
# Executing instruction: IJUMPIFEQ at line: 40 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@result=false(bool)
# Executing instruction: IPUSHS at line: 41 with following arguments:
# Arg1: LF@n=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 43 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 44 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@result=false(bool)
# Executing instruction: IJUMPIFEQ at line: 45 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@result=false(bool)
# Executing instruction: ISTRLEN at line: 46 with following arguments:
# Arg1: LF@s=Toto je nejaky text, ktery jeste trochu obohatime(string)
# Dest: LF@tmplen=34(int)
# Executing instruction: ISUB at line: 47 with following arguments:
# Arg1: LF@tmplen=49(int)
# Arg2: LF@i=16(int)
# Dest: LF@tmplen=49(int)
# Executing instruction: IADD at line: 48 with following arguments:
# Arg1: LF@tmplen=33(int)
# Arg2: Const@=1(int)
# Dest: LF@tmplen=33(int)
# Executing instruction: IPUSHS at line: 49 with following arguments:
# Arg1: LF@tmplen=34(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 50 with following arguments:
# Arg1: LF@n=4(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 51 with following arguments:
# Arg1: Stack@=34(int)
# Arg2: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 52 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@result=false(bool)
# Executing instruction: IJUMPIFEQ at line: 53 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@result=false(bool)
# Executing instruction: IMOVE at line: 54 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@tmplen=34(int)
# Executing instruction: ISTRLEN at line: 55 with following arguments:
# Arg1: LF@s=Toto je nejaky text, ktery jeste trochu obohatime(string)
# Dest: LF@tmplen=0(int)
# Executing instruction: ISUB at line: 56 with following arguments:
# Arg1: LF@tmplen=49(int)
# Arg2: LF@i=16(int)
# Dest: LF@tmplen=49(int)
# Executing instruction: ILABEL at line: 57 with following arguments:
# Executing instruction: IGETCHAR at line: 58 with following arguments:
# Arg1: LF@s=Toto je nejaky text, ktery jeste trochu obohatime(string)
# Arg2: LF@tmp1=15(int)
# Dest: LF@tmp2=(string)
# Executing instruction: ICONCAT at line: 59 with following arguments:
# Arg1: LF@%retval=(string)
# Arg2: LF@tmp2=t(string)
# Dest: LF@%retval=(string)
# Executing instruction: IADD at line: 60 with following arguments:
# Arg1: LF@tmp1=15(int)
# Arg2: Const@=1(int)
# Dest: LF@tmp1=15(int)
# Executing instruction: ISTRLEN at line: 61 with following arguments:
# Arg1: LF@%retval=t(string)
# Dest: LF@length=0(int)
# Executing instruction: IJUMPIFNEQ at line: 62 with following arguments:
# Arg1: LF@length=1(int)
# Arg2: LF@n=4(int)
# Executing instruction: ILABEL at line: 57 with following arguments:
# Executing instruction: IGETCHAR at line: 58 with following arguments:
# Arg1: LF@s=Toto je nejaky text, ktery jeste trochu obohatime(string)
# Arg2: LF@tmp1=16(int)
# Dest: LF@tmp2=t(string)
# Executing instruction: ICONCAT at line: 59 with following arguments:
# Arg1: LF@%retval=t(string)
# Arg2: LF@tmp2=e(string)
# Dest: LF@%retval=t(string)
# Executing instruction: IADD at line: 60 with following arguments:
# Arg1: LF@tmp1=16(int)
# Arg2: Const@=1(int)
# Dest: LF@tmp1=16(int)
# Executing instruction: ISTRLEN at line: 61 with following arguments:
# Arg1: LF@%retval=te(string)
# Dest: LF@length=1(int)
# Executing instruction: IJUMPIFNEQ at line: 62 with following arguments:
# Arg1: LF@length=2(int)
# Arg2: LF@n=4(int)
# Executing instruction: ILABEL at line: 57 with following arguments:
# Executing instruction: IGETCHAR at line: 58 with following arguments:
# Arg1: LF@s=Toto je nejaky text, ktery jeste trochu obohatime(string)
# Arg2: LF@tmp1=17(int)
# Dest: LF@tmp2=e(string)
# Executing instruction: ICONCAT at line: 59 with following arguments:
# Arg1: LF@%retval=te(string)
# Arg2: LF@tmp2=x(string)
# Dest: LF@%retval=te(string)
# Executing instruction: IADD at line: 60 with following arguments:
# Arg1: LF@tmp1=17(int)
# Arg2: Const@=1(int)
# Dest: LF@tmp1=17(int)
# Executing instruction: ISTRLEN at line: 61 with following arguments:
# Arg1: LF@%retval=tex(string)
# Dest: LF@length=2(int)
# Executing instruction: IJUMPIFNEQ at line: 62 with following arguments:
# Arg1: LF@length=3(int)
# Arg2: LF@n=4(int)
# Executing instruction: ILABEL at line: 57 with following arguments:
# Executing instruction: IGETCHAR at line: 58 with following arguments:
# Arg1: LF@s=Toto je nejaky text, ktery jeste trochu obohatime(string)
# Arg2: LF@tmp1=18(int)
# Dest: LF@tmp2=x(string)
# Executing instruction: ICONCAT at line: 59 with following arguments:
# Arg1: LF@%retval=tex(string)
# Arg2: LF@tmp2=t(string)
# Dest: LF@%retval=tex(string)
# Executing instruction: IADD at line: 60 with following arguments:
# Arg1: LF@tmp1=18(int)
# Arg2: Const@=1(int)
# Dest: LF@tmp1=18(int)
# Executing instruction: ISTRLEN at line: 61 with following arguments:
# Arg1: LF@%retval=text(string)
# Dest: LF@length=3(int)
# Executing instruction: IJUMPIFNEQ at line: 62 with following arguments:
# Arg1: LF@length=4(int)
# Arg2: LF@n=4(int)
# Executing instruction: IJUMP at line: 63 with following arguments:
# Executing instruction: ILABEL at line: 73 with following arguments:
# Executing instruction: IPOPFRAME at line: 74 with following arguments:
# Executing instruction: IRETURN at line: 75 with following arguments:
# Executing instruction: IMOVE at line: 177 with following arguments:
# Arg1: TF@%retval=text(string)
# Dest: LF@s1=Toto je nejaky text(string)
# Executing instruction: IDEFVAR at line: 178 with following arguments:
# Dest: LF@&j
# Executing instruction: IMOVE at line: 179 with following arguments:
# Arg1: Const@=4 znaky od (string)
# Dest: LF@&j()
# Executing instruction: IWRITE at line: 180 with following arguments:
# Arg1: LF@&j=4 znaky od (string)
# Executing instruction: IDEFVAR at line: 181 with following arguments:
# Dest: LF@&k
# Executing instruction: IMOVE at line: 182 with following arguments:
# Arg1: LF@s1len=16(int)
# Dest: LF@&k()
# Executing instruction: IWRITE at line: 183 with following arguments:
# Arg1: LF@&k=16(int)
# Executing instruction: IDEFVAR at line: 184 with following arguments:
# Dest: LF@&l
# Executing instruction: IMOVE at line: 185 with following arguments:
# Arg1: Const@=. znaku v "(string)
# Dest: LF@&l()
# Executing instruction: IWRITE at line: 186 with following arguments:
# Arg1: LF@&l=. znaku v "(string)
# Executing instruction: IDEFVAR at line: 187 with following arguments:
# Dest: LF@&m
# Executing instruction: IMOVE at line: 188 with following arguments:
# Arg1: LF@s2=Toto je nejaky text, ktery jeste trochu obohatime(string)
# Dest: LF@&m()
# Executing instruction: IWRITE at line: 189 with following arguments:
# Arg1: LF@&m=Toto je nejaky text, ktery jeste trochu obohatime(string)
# Executing instruction: IDEFVAR at line: 190 with following arguments:
# Dest: LF@&n
# Executing instruction: IMOVE at line: 191 with following arguments:
# Arg1: Const@=":(string)
# Dest: LF@&n()
# Executing instruction: IWRITE at line: 192 with following arguments:
# Arg1: LF@&n=":(string)
# Executing instruction: IDEFVAR at line: 193 with following arguments:
# Dest: LF@&o
# Executing instruction: IMOVE at line: 194 with following arguments:
# Arg1: LF@s1=text(string)
# Dest: LF@&o()
# Executing instruction: IWRITE at line: 195 with following arguments:
# Arg1: LF@&o=text(string)
# Executing instruction: IDEFVAR at line: 196 with following arguments:
# Dest: LF@&p
# Executing instruction: IMOVE at line: 197 with following arguments:
# Arg1: Const@=
# (string)
# Dest: LF@&p()
# Executing instruction: IWRITE at line: 198 with following arguments:
# Arg1: LF@&p=
# (string)
# Executing instruction: IDEFVAR at line: 199 with following arguments:
# Dest: LF@&q
# Executing instruction: IMOVE at line: 200 with following arguments:
# Arg1: Const@=Zadejte serazenou posloupnost vsech malych pismen a-h, (string)
# Dest: LF@&q()
# Executing instruction: IWRITE at line: 201 with following arguments:
# Arg1: LF@&q=Zadejte serazenou posloupnost vsech malych pismen a-h, (string)
# Executing instruction: IDEFVAR at line: 202 with following arguments:
# Dest: LF@&r
# Executing instruction: IMOVE at line: 203 with following arguments:
# Arg1: Const@=pricemz se pismena nesmeji v posloupnosti opakovat(string)
# Dest: LF@&r()
# Executing instruction: IWRITE at line: 204 with following arguments:
# Arg1: LF@&r=pricemz se pismena nesmeji v posloupnosti opakovat(string)
# Executing instruction: IWRITE at line: 205 with following arguments:
# Arg1: Const@=? (string)
# Executing instruction: IREAD at line: 206 with following arguments:
# Dest: LF@s1=text(string)
# Executing instruction: ILABEL at line: 207 with following arguments:
# Executing instruction: ICREATEFRAME at line: 208 with following arguments:
# Executing instruction: IDEFVAR at line: 209 with following arguments:
# Dest: TF@s1
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: LF@s1=abcdefgh(string)
# Dest: TF@s1()
# Executing instruction: IDEFVAR at line: 211 with following arguments:
# Dest: TF@s2
# Executing instruction: IMOVE at line: 212 with following arguments:
# Arg1: LF@s2=Toto je nejaky text, ktery jeste trochu obohatime(string)
# Dest: TF@s2()
# Executing instruction: IDEFVAR at line: 213 with following arguments:
# Dest: TF@s1len
# Executing instruction: IMOVE at line: 214 with following arguments:
# Arg1: LF@s1len=16(int)
# Dest: TF@s1len()
# Executing instruction: IPUSHFRAME at line: 215 with following arguments:
# Executing instruction: IDEFVAR at line: 216 with following arguments:
# Dest: LF@&s
# Executing instruction: IMOVE at line: 217 with following arguments:
# Arg1: LF@s1=abcdefgh(string)
# Dest: LF@&s()
# Executing instruction: IPUSHS at line: 218 with following arguments:
# Arg1: LF@&s=abcdefgh(string)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 219 with following arguments:
# Arg1: Const@=abcdefgh(string)
# Dest: LF@&s=abcdefgh(string)
# Executing instruction: IPUSHS at line: 220 with following arguments:
# Arg1: LF@&s=abcdefgh(string)
# Dest: Stack@()
# Executing instruction: IEQS at line: 221 with following arguments:
# Arg1: Stack@=abcdefgh(string)
# Arg2: Stack@=abcdefgh(string)
# Dest: Stack@()
# Executing instruction: INOTS at line: 222 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 223 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@&s=abcdefgh(string)
# Executing instruction: IJUMPIFNEQ at line: 224 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&s=false(bool)
# Executing instruction: ILABEL at line: 235 with following arguments:
# Executing instruction: IPOPFRAME at line: 236 with following arguments:
# Executing instruction: IPOPFRAME at line: 237 with following arguments:
# Executing instruction: IGROOT at line: 239 with following arguments:
# I am Groot at 239 (1361).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# abcdefgh
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 1361 (365+996)
# GROOT: 1361
# 
#   1: ' combined input with builtin functions (TODO: stdout)
#   2: 
#   3: Scope
#   4: 	Dim s1 As String
#   5: 	Dim s2 As String
#   6: 	Dim s1len As Integer
#   7: 
#   8: 	'Hlavni telo programu
#   9: 	
#  10: 	s1 = !"Toto je nejaky text"
#  11: 	s2 = s1 + !", ktery jeste trochu obohatime"
#  12: 	Print s1; !"\n"; s2; !"\n";
#  13: 	s1len = Length(s1)
#  14: 	s1len = s1len - 4 + 1
#  15: 	s1 = SubStr(s2, s1len, 4)
#  16: 	Print !"4 znaky od "; s1len; !". znaku v \""; s2; !"\":"; s1; !"\n";
#  17: 
#  18: 	Print !"Zadejte serazenou posloupnost vsech malych pismen a-h, ";
#  19: 	Print !"pricemz se pismena nesmeji v posloupnosti opakovat";
#  20: 
#  21: 	Input s1
#  22: 	Do While (s1 <> !"abcdefgh")
#  23: 		Print !"\nSpatne zadana posloupnost, zkuste znovu";
#  24: 		Input s1
#  25: 	Loop
#  26: End Scope

########################################

.IFJcode17                                                                      #     1/237
JUMP $$main                                                                     #     2/237
LABEL $length                                                                   #     3/237
PUSHFRAME                                                                       #     4/237
DEFVAR LF@%retval                                                               #     5/237
MOVE LF@%retval int@0                                                           #     6/237
STRLEN LF@%retval LF@s                                                          #     7/237
LABEL $length$epilog                                                            #     8/237
POPFRAME                                                                        #     9/237
RETURN                                                                          #    10/237
LABEL $substr                                                                   #    11/237
PUSHFRAME                                                                       #    12/237
DEFVAR LF@%retval                                                               #    13/237
MOVE LF@%retval string@                                                         #    14/237
DEFVAR LF@tmp1                                                                  #    15/237
DEFVAR LF@tmp2                                                                  #    16/237
MOVE LF@tmp1 int@0                                                              #    17/237
MOVE LF@tmp2 string@                                                            #    18/237
SUB LF@tmp1 LF@i int@1                                                          #    19/237
DEFVAR LF@length                                                                #    20/237
MOVE LF@length int@0                                                            #    21/237
DEFVAR LF@result                                                                #    22/237
MOVE LF@result bool@false                                                       #    23/237
DEFVAR LF@tmplen                                                                #    24/237
MOVE LF@tmplen int@0                                                            #    25/237
STRLEN LF@tmplen LF@s                                                           #    26/237
SUB LF@tmplen LF@tmplen LF@i                                                    #    27/237
ADD LF@tmplen LF@tmplen int@1                                                   #    28/237
JUMPIFEQ $SubStrReturn0 LF@s LF@tmp2                                            #    29/237
PUSHS LF@i                                                                      #    30/237
PUSHS int@0                                                                     #    31/237
PUSHS LF@i                                                                      #    32/237
PUSHS int@0                                                                     #    33/237
EQS                                                                             #    34/237
POPS LF@result                                                                  #    35/237
LTS                                                                             #    36/237
PUSHS LF@result                                                                 #    37/237
ORS                                                                             #    38/237
POPS LF@result                                                                  #    39/237
JUMPIFEQ $SubStrReturn0 bool@true LF@result                                     #    40/237
PUSHS LF@n                                                                      #    41/237
PUSHS int@0                                                                     #    42/237
LTS                                                                             #    43/237
POPS LF@result                                                                  #    44/237
JUMPIFEQ $SubStrReturnRest bool@true LF@result                                  #    45/237
STRLEN LF@tmplen LF@s                                                           #    46/237
SUB LF@tmplen LF@tmplen LF@i                                                    #    47/237
ADD LF@tmplen LF@tmplen int@1                                                   #    48/237
PUSHS LF@tmplen                                                                 #    49/237
PUSHS LF@n                                                                      #    50/237
LTS                                                                             #    51/237
POPS LF@result                                                                  #    52/237
JUMPIFEQ $SubStrReturnRest bool@true LF@result                                  #    53/237
MOVE LF@tmplen int@0                                                            #    54/237
STRLEN LF@tmplen LF@s                                                           #    55/237
SUB LF@tmplen LF@tmplen LF@i                                                    #    56/237
LABEL $SubStrFor                                                                #    57/237
GETCHAR LF@tmp2 LF@s LF@tmp1                                                    #    58/237
CONCAT LF@%retval LF@%retval LF@tmp2                                            #    59/237
ADD LF@tmp1 LF@tmp1 int@1                                                       #    60/237
STRLEN LF@length LF@%retval                                                     #    61/237
JUMPIFNEQ $SubStrFor LF@length LF@n                                             #    62/237
JUMP $substr$epilog                                                             #    63/237
LABEL $SubStrReturn0                                                            #    64/237
MOVE LF@%retval string@                                                         #    65/237
JUMP $substr$epilog                                                             #    66/237
LABEL $SubStrReturnRest                                                         #    67/237
GETCHAR LF@tmp2 LF@s LF@tmp1                                                    #    68/237
CONCAT LF@%retval LF@%retval LF@tmp2                                            #    69/237
ADD LF@tmp1 LF@tmp1 int@1                                                       #    70/237
STRLEN LF@length LF@%retval                                                     #    71/237
JUMPIFNEQ $SubStrReturnRest LF@tmplen LF@length                                 #    72/237
LABEL $substr$epilog                                                            #    73/237
POPFRAME                                                                        #    74/237
RETURN                                                                          #    75/237
LABEL $asc                                                                      #    76/237
PUSHFRAME                                                                       #    77/237
DEFVAR LF@%retval                                                               #    78/237
MOVE LF@%retval int@0                                                           #    79/237
DEFVAR LF@result                                                                #    80/237
MOVE LF@result bool@false                                                       #    81/237
DEFVAR LF@tmp                                                                   #    82/237
DEFVAR LF@tmp2                                                                  #    83/237
MOVE LF@tmp string@                                                             #    84/237
MOVE LF@tmp2 int@0                                                              #    85/237
PUSHS LF@i                                                                      #    86/237
PUSHS int@0                                                                     #    87/237
PUSHS LF@i                                                                      #    88/237
PUSHS int@0                                                                     #    89/237
EQS                                                                             #    90/237
POPS LF@result                                                                  #    91/237
LTS                                                                             #    92/237
PUSHS LF@result                                                                 #    93/237
ORS                                                                             #    94/237
POPS LF@result                                                                  #    95/237
JUMPIFEQ $asc$epilog bool@true LF@result                                        #    96/237
PUSHS LF@i                                                                      #    97/237
STRLEN LF@tmp2 LF@s                                                             #    98/237
PUSHS LF@tmp2                                                                   #    99/237
GTS                                                                             #   100/237
POPS LF@result                                                                  #   101/237
JUMPIFEQ $asc$epilog bool@true LF@result                                        #   102/237
SUB LF@i LF@i int@1                                                             #   103/237
GETCHAR LF@tmp LF@s LF@i                                                        #   104/237
STRI2INT LF@%retval LF@tmp int@0                                                #   105/237
LABEL $asc$epilog                                                               #   106/237
POPFRAME                                                                        #   107/237
RETURN                                                                          #   108/237
LABEL $chr                                                                      #   109/237
PUSHFRAME                                                                       #   110/237
DEFVAR LF@%retval                                                               #   111/237
MOVE LF@%retval string@                                                         #   112/237
DEFVAR LF@tmp                                                                   #   113/237
MOVE LF@tmp string@                                                             #   114/237
INT2CHAR LF@%retval LF@i                                                        #   115/237
POPFRAME                                                                        #   116/237
RETURN                                                                          #   117/237
LABEL $$main                                                                    #   118/237
CREATEFRAME                                                                     #   119/237
PUSHFRAME                                                                       #   120/237
DEFVAR LF@s1                                                                    #   121/237
MOVE LF@s1 string@                                                              #   122/237
DEFVAR LF@s2                                                                    #   123/237
MOVE LF@s2 string@                                                              #   124/237
DEFVAR LF@s1len                                                                 #   125/237
MOVE LF@s1len int@0                                                             #   126/237
DEFVAR LF@&a                                                                    #   127/237
MOVE LF@&a string@Toto\032je\032nejaky\032text                                  #   128/237
MOVE LF@s1 LF@&a                                                                #   129/237
DEFVAR LF@&b                                                                    #   130/237
MOVE LF@&b LF@s1                                                                #   131/237
PUSHS LF@&b                                                                     #   132/237
MOVE LF@&b string@,\032ktery\032jeste\032trochu\032obohatime                    #   133/237
PUSHS LF@&b                                                                     #   134/237
DEFVAR LF@&c                                                                    #   135/237
DEFVAR LF@&d                                                                    #   136/237
POPS LF@&c                                                                      #   137/237
POPS LF@&d                                                                      #   138/237
CONCAT LF@&b LF@&d LF@&c                                                        #   139/237
MOVE LF@s2 LF@&b                                                                #   140/237
DEFVAR LF@&e                                                                    #   141/237
MOVE LF@&e LF@s1                                                                #   142/237
WRITE LF@&e                                                                     #   143/237
DEFVAR LF@&f                                                                    #   144/237
MOVE LF@&f string@\010                                                          #   145/237
WRITE LF@&f                                                                     #   146/237
DEFVAR LF@&g                                                                    #   147/237
MOVE LF@&g LF@s2                                                                #   148/237
WRITE LF@&g                                                                     #   149/237
DEFVAR LF@&h                                                                    #   150/237
MOVE LF@&h string@\010                                                          #   151/237
WRITE LF@&h                                                                     #   152/237
CREATEFRAME                                                                     #   153/237
DEFVAR TF@s                                                                     #   154/237
MOVE TF@s LF@s1                                                                 #   155/237
CALL $length                                                                    #   156/237
MOVE LF@s1len TF@%retval                                                        #   157/237
DEFVAR LF@&i                                                                    #   158/237
MOVE LF@&i LF@s1len                                                             #   159/237
PUSHS LF@&i                                                                     #   160/237
MOVE LF@&i int@4                                                                #   161/237
PUSHS LF@&i                                                                     #   162/237
SUBS                                                                            #   163/237
MOVE LF@&i int@1                                                                #   164/237
PUSHS LF@&i                                                                     #   165/237
ADDS                                                                            #   166/237
POPS LF@&i                                                                      #   167/237
MOVE LF@s1len LF@&i                                                             #   168/237
CREATEFRAME                                                                     #   169/237
DEFVAR TF@s                                                                     #   170/237
MOVE TF@s LF@s2                                                                 #   171/237
DEFVAR TF@i                                                                     #   172/237
MOVE TF@i LF@s1len                                                              #   173/237
DEFVAR TF@n                                                                     #   174/237
MOVE TF@n int@4                                                                 #   175/237
CALL $substr                                                                    #   176/237
MOVE LF@s1 TF@%retval                                                           #   177/237
DEFVAR LF@&j                                                                    #   178/237
MOVE LF@&j string@4\032znaky\032od\032                                          #   179/237
WRITE LF@&j                                                                     #   180/237
DEFVAR LF@&k                                                                    #   181/237
MOVE LF@&k LF@s1len                                                             #   182/237
WRITE LF@&k                                                                     #   183/237
DEFVAR LF@&l                                                                    #   184/237
MOVE LF@&l string@.\032znaku\032v\032\034                                       #   185/237
WRITE LF@&l                                                                     #   186/237
DEFVAR LF@&m                                                                    #   187/237
MOVE LF@&m LF@s2                                                                #   188/237
WRITE LF@&m                                                                     #   189/237
DEFVAR LF@&n                                                                    #   190/237
MOVE LF@&n string@\034:                                                         #   191/237
WRITE LF@&n                                                                     #   192/237
DEFVAR LF@&o                                                                    #   193/237
MOVE LF@&o LF@s1                                                                #   194/237
WRITE LF@&o                                                                     #   195/237
DEFVAR LF@&p                                                                    #   196/237
MOVE LF@&p string@\010                                                          #   197/237
WRITE LF@&p                                                                     #   198/237
DEFVAR LF@&q                                                                    #   199/237
MOVE LF@&q string@Zadejte\032serazenou\032posloupnost\032vsech\032malych\032pismen\032a-h,\032#   200/237
WRITE LF@&q                                                                     #   201/237
DEFVAR LF@&r                                                                    #   202/237
MOVE LF@&r string@pricemz\032se\032pismena\032nesmeji\032v\032posloupnosti\032opakovat#   203/237
WRITE LF@&r                                                                     #   204/237
WRITE string@?\032                                                              #   205/237
READ LF@s1 string                                                               #   206/237
LABEL $a                                                                        #   207/237
CREATEFRAME                                                                     #   208/237
DEFVAR TF@s1                                                                    #   209/237
MOVE TF@s1 LF@s1                                                                #   210/237
DEFVAR TF@s2                                                                    #   211/237
MOVE TF@s2 LF@s2                                                                #   212/237
DEFVAR TF@s1len                                                                 #   213/237
MOVE TF@s1len LF@s1len                                                          #   214/237
PUSHFRAME                                                                       #   215/237
DEFVAR LF@&s                                                                    #   216/237
MOVE LF@&s LF@s1                                                                #   217/237
PUSHS LF@&s                                                                     #   218/237
MOVE LF@&s string@abcdefgh                                                      #   219/237
PUSHS LF@&s                                                                     #   220/237
EQS                                                                             #   221/237
NOTS                                                                            #   222/237
POPS LF@&s                                                                      #   223/237
JUMPIFNEQ $b bool@true LF@&s                                                    #   224/237
DEFVAR LF@&t                                                                    #   225/237
MOVE LF@&t string@\010Spatne\032zadana\032posloupnost,\032zkuste\032znovu       #   226/237
WRITE LF@&t                                                                     #   227/237
WRITE string@?\032                                                              #   228/237
READ LF@s1 string                                                               #   229/237
POPFRAME                                                                        #   230/237
MOVE LF@s1 TF@s1                                                                #   231/237
MOVE LF@s2 TF@s2                                                                #   232/237
MOVE LF@s1len TF@s1len                                                          #   233/237
JUMP $a                                                                         #   234/237
LABEL $b                                                                        #   235/237
POPFRAME                                                                        #   236/237
POPFRAME                                                                        #   237/237

