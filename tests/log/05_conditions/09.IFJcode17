# 2017-12-02 16:01:34.264989
# SECTION: 05_conditions
# TEST: 09
# INFO: Condition with implicit conversion
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: 
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# Everything is OK
# 
# INTERPRETER STDERR:
# Executing instruction: IJUMP at line: 2 with following arguments:
# Executing instruction: ILABEL at line: 118 with following arguments:
# Executing instruction: ICREATEFRAME at line: 119 with following arguments:
# Executing instruction: IPUSHFRAME at line: 120 with following arguments:
# Executing instruction: IDEFVAR at line: 121 with following arguments:
# Dest: LF@&a
# Executing instruction: IMOVE at line: 122 with following arguments:
# Arg1: Const@=8(int)
# Dest: LF@&a()
# Executing instruction: IPUSHS at line: 123 with following arguments:
# Arg1: LF@&a=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 124 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 125 with following arguments:
# Arg1: Const@=2(double)
# Dest: LF@&a=8(int)
# Executing instruction: IPUSHS at line: 126 with following arguments:
# Arg1: LF@&a=2(double)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 127 with following arguments:
# Arg1: Const@=9(int)
# Dest: LF@&a=2(double)
# Executing instruction: IPUSHS at line: 128 with following arguments:
# Arg1: LF@&a=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 129 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 130 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=9(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 131 with following arguments:
# Arg1: Stack@=8(double)
# Arg2: Stack@=0.2222222222222222(double)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 132 with following arguments:
# Arg1: Const@=112.3(double)
# Dest: LF@&a=9(int)
# Executing instruction: IPUSHS at line: 133 with following arguments:
# Arg1: LF@&a=112.3(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 134 with following arguments:
# Arg1: Stack@=1.777777777777778(double)
# Arg2: Stack@=112.3(double)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 135 with following arguments:
# Arg1: Const@=13.8(double)
# Dest: LF@&a=112.3(double)
# Executing instruction: IPUSHS at line: 136 with following arguments:
# Arg1: LF@&a=13.8(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 137 with following arguments:
# Arg1: Stack@=114.0777777777778(double)
# Arg2: Stack@=13.8(double)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 138 with following arguments:
# Arg1: Const@=8(int)
# Dest: LF@&a=13.8(double)
# Executing instruction: IPUSHS at line: 139 with following arguments:
# Arg1: LF@&a=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 140 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 141 with following arguments:
# Arg1: Const@=2(double)
# Dest: LF@&a=8(int)
# Executing instruction: IPUSHS at line: 142 with following arguments:
# Arg1: LF@&a=2(double)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 143 with following arguments:
# Arg1: Const@=9(int)
# Dest: LF@&a=2(double)
# Executing instruction: IPUSHS at line: 144 with following arguments:
# Arg1: LF@&a=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 145 with following arguments:
# Arg1: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 146 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=9(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 147 with following arguments:
# Arg1: Stack@=8(double)
# Arg2: Stack@=0.2222222222222222(double)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 148 with following arguments:
# Arg1: Const@=112.3(double)
# Dest: LF@&a=9(int)
# Executing instruction: IPUSHS at line: 149 with following arguments:
# Arg1: LF@&a=112.3(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 150 with following arguments:
# Arg1: Stack@=1.777777777777778(double)
# Arg2: Stack@=112.3(double)
# Dest: Stack@()
# Executing instruction: IMOVE at line: 151 with following arguments:
# Arg1: Const@=13.8(double)
# Dest: LF@&a=112.3(double)
# Executing instruction: IPUSHS at line: 152 with following arguments:
# Arg1: LF@&a=13.8(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 153 with following arguments:
# Arg1: Stack@=114.0777777777778(double)
# Arg2: Stack@=13.8(double)
# Dest: Stack@()
# Executing instruction: IGTS at line: 154 with following arguments:
# Arg1: Stack@=100.2777777777778(double)
# Arg2: Stack@=127.8777777777778(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 155 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@&a=13.8(double)
# Executing instruction: IJUMPIFNEQ at line: 156 with following arguments:
# Arg1: Const@=true(bool)
# Arg2: LF@&a=false(bool)
# Executing instruction: ILABEL at line: 161 with following arguments:
# Executing instruction: IDEFVAR at line: 162 with following arguments:
# Dest: LF@&c
# Executing instruction: IMOVE at line: 163 with following arguments:
# Arg1: Const@=58(int)
# Dest: LF@&c()
# Executing instruction: IWRITE at line: 164 with following arguments:
# Arg1: LF@&c=58(int)
# Executing instruction: ILABEL at line: 165 with following arguments:
# Executing instruction: IPOPFRAME at line: 166 with following arguments:
# Executing instruction: IGROOT at line: 168 with following arguments:
# I am Groot at 168 (277).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 277 (69+208)
# GROOT: 277
# 
#   1: ' Condition with implicit conversion
#   2: scope
#   3: 	if ((8*(2.0/9)+112.3 - 13.8) > (8*(2.0/9)+112.3 + 13.8)) then
#   4: 		print 42;
#   5: 	else
#   6: 		print 58;
#   7: 	end if
#   8: end scope

########################################

.IFJcode17                                                                      #     1/166
JUMP $$main                                                                     #     2/166
LABEL $length                                                                   #     3/166
PUSHFRAME                                                                       #     4/166
DEFVAR LF@%retval                                                               #     5/166
MOVE LF@%retval int@0                                                           #     6/166
STRLEN LF@%retval LF@s                                                          #     7/166
LABEL $length$epilog                                                            #     8/166
POPFRAME                                                                        #     9/166
RETURN                                                                          #    10/166
LABEL $substr                                                                   #    11/166
PUSHFRAME                                                                       #    12/166
DEFVAR LF@%retval                                                               #    13/166
MOVE LF@%retval string@                                                         #    14/166
DEFVAR LF@tmp1                                                                  #    15/166
DEFVAR LF@tmp2                                                                  #    16/166
MOVE LF@tmp1 int@0                                                              #    17/166
MOVE LF@tmp2 string@                                                            #    18/166
SUB LF@tmp1 LF@i int@1                                                          #    19/166
DEFVAR LF@length                                                                #    20/166
MOVE LF@length int@0                                                            #    21/166
DEFVAR LF@result                                                                #    22/166
MOVE LF@result bool@false                                                       #    23/166
DEFVAR LF@tmplen                                                                #    24/166
MOVE LF@tmplen int@0                                                            #    25/166
STRLEN LF@tmplen LF@s                                                           #    26/166
SUB LF@tmplen LF@tmplen LF@i                                                    #    27/166
ADD LF@tmplen LF@tmplen int@1                                                   #    28/166
JUMPIFEQ $SubStrReturn0 LF@s LF@tmp2                                            #    29/166
PUSHS LF@i                                                                      #    30/166
PUSHS int@0                                                                     #    31/166
PUSHS LF@i                                                                      #    32/166
PUSHS int@0                                                                     #    33/166
EQS                                                                             #    34/166
POPS LF@result                                                                  #    35/166
LTS                                                                             #    36/166
PUSHS LF@result                                                                 #    37/166
ORS                                                                             #    38/166
POPS LF@result                                                                  #    39/166
JUMPIFEQ $SubStrReturn0 bool@true LF@result                                     #    40/166
PUSHS LF@n                                                                      #    41/166
PUSHS int@0                                                                     #    42/166
LTS                                                                             #    43/166
POPS LF@result                                                                  #    44/166
JUMPIFEQ $SubStrReturnRest bool@true LF@result                                  #    45/166
STRLEN LF@tmplen LF@s                                                           #    46/166
SUB LF@tmplen LF@tmplen LF@i                                                    #    47/166
ADD LF@tmplen LF@tmplen int@1                                                   #    48/166
PUSHS LF@tmplen                                                                 #    49/166
PUSHS LF@n                                                                      #    50/166
LTS                                                                             #    51/166
POPS LF@result                                                                  #    52/166
JUMPIFEQ $SubStrReturnRest bool@true LF@result                                  #    53/166
MOVE LF@tmplen int@0                                                            #    54/166
STRLEN LF@tmplen LF@s                                                           #    55/166
SUB LF@tmplen LF@tmplen LF@i                                                    #    56/166
LABEL $SubStrFor                                                                #    57/166
GETCHAR LF@tmp2 LF@s LF@tmp1                                                    #    58/166
CONCAT LF@%retval LF@%retval LF@tmp2                                            #    59/166
ADD LF@tmp1 LF@tmp1 int@1                                                       #    60/166
STRLEN LF@length LF@%retval                                                     #    61/166
JUMPIFNEQ $SubStrFor LF@length LF@n                                             #    62/166
JUMP $substr$epilog                                                             #    63/166
LABEL $SubStrReturn0                                                            #    64/166
MOVE LF@%retval string@                                                         #    65/166
JUMP $substr$epilog                                                             #    66/166
LABEL $SubStrReturnRest                                                         #    67/166
GETCHAR LF@tmp2 LF@s LF@tmp1                                                    #    68/166
CONCAT LF@%retval LF@%retval LF@tmp2                                            #    69/166
ADD LF@tmp1 LF@tmp1 int@1                                                       #    70/166
STRLEN LF@length LF@%retval                                                     #    71/166
JUMPIFNEQ $SubStrReturnRest LF@tmplen LF@length                                 #    72/166
LABEL $substr$epilog                                                            #    73/166
POPFRAME                                                                        #    74/166
RETURN                                                                          #    75/166
LABEL $asc                                                                      #    76/166
PUSHFRAME                                                                       #    77/166
DEFVAR LF@%retval                                                               #    78/166
MOVE LF@%retval int@0                                                           #    79/166
DEFVAR LF@result                                                                #    80/166
MOVE LF@result bool@false                                                       #    81/166
DEFVAR LF@tmp                                                                   #    82/166
DEFVAR LF@tmp2                                                                  #    83/166
MOVE LF@tmp string@                                                             #    84/166
MOVE LF@tmp2 int@0                                                              #    85/166
PUSHS LF@i                                                                      #    86/166
PUSHS int@0                                                                     #    87/166
PUSHS LF@i                                                                      #    88/166
PUSHS int@0                                                                     #    89/166
EQS                                                                             #    90/166
POPS LF@result                                                                  #    91/166
LTS                                                                             #    92/166
PUSHS LF@result                                                                 #    93/166
ORS                                                                             #    94/166
POPS LF@result                                                                  #    95/166
JUMPIFEQ $asc$epilog bool@true LF@result                                        #    96/166
PUSHS LF@i                                                                      #    97/166
STRLEN LF@tmp2 LF@s                                                             #    98/166
PUSHS LF@tmp2                                                                   #    99/166
GTS                                                                             #   100/166
POPS LF@result                                                                  #   101/166
JUMPIFEQ $asc$epilog bool@true LF@result                                        #   102/166
SUB LF@i LF@i int@1                                                             #   103/166
GETCHAR LF@tmp LF@s LF@i                                                        #   104/166
STRI2INT LF@%retval LF@tmp int@0                                                #   105/166
LABEL $asc$epilog                                                               #   106/166
POPFRAME                                                                        #   107/166
RETURN                                                                          #   108/166
LABEL $chr                                                                      #   109/166
PUSHFRAME                                                                       #   110/166
DEFVAR LF@%retval                                                               #   111/166
MOVE LF@%retval string@                                                         #   112/166
DEFVAR LF@tmp                                                                   #   113/166
MOVE LF@tmp string@                                                             #   114/166
INT2CHAR LF@%retval LF@i                                                        #   115/166
POPFRAME                                                                        #   116/166
RETURN                                                                          #   117/166
LABEL $$main                                                                    #   118/166
CREATEFRAME                                                                     #   119/166
PUSHFRAME                                                                       #   120/166
DEFVAR LF@&a                                                                    #   121/166
MOVE LF@&a int@8                                                                #   122/166
PUSHS LF@&a                                                                     #   123/166
INT2FLOATS                                                                      #   124/166
MOVE LF@&a float@2                                                              #   125/166
PUSHS LF@&a                                                                     #   126/166
MOVE LF@&a int@9                                                                #   127/166
PUSHS LF@&a                                                                     #   128/166
INT2FLOATS                                                                      #   129/166
DIVS                                                                            #   130/166
MULS                                                                            #   131/166
MOVE LF@&a float@112.3                                                          #   132/166
PUSHS LF@&a                                                                     #   133/166
ADDS                                                                            #   134/166
MOVE LF@&a float@13.8                                                           #   135/166
PUSHS LF@&a                                                                     #   136/166
SUBS                                                                            #   137/166
MOVE LF@&a int@8                                                                #   138/166
PUSHS LF@&a                                                                     #   139/166
INT2FLOATS                                                                      #   140/166
MOVE LF@&a float@2                                                              #   141/166
PUSHS LF@&a                                                                     #   142/166
MOVE LF@&a int@9                                                                #   143/166
PUSHS LF@&a                                                                     #   144/166
INT2FLOATS                                                                      #   145/166
DIVS                                                                            #   146/166
MULS                                                                            #   147/166
MOVE LF@&a float@112.3                                                          #   148/166
PUSHS LF@&a                                                                     #   149/166
ADDS                                                                            #   150/166
MOVE LF@&a float@13.8                                                           #   151/166
PUSHS LF@&a                                                                     #   152/166
ADDS                                                                            #   153/166
GTS                                                                             #   154/166
POPS LF@&a                                                                      #   155/166
JUMPIFNEQ $a bool@true LF@&a                                                    #   156/166
DEFVAR LF@&b                                                                    #   157/166
MOVE LF@&b int@42                                                               #   158/166
WRITE LF@&b                                                                     #   159/166
JUMP $b                                                                         #   160/166
LABEL $a                                                                        #   161/166
DEFVAR LF@&c                                                                    #   162/166
MOVE LF@&c int@58                                                               #   163/166
WRITE LF@&c                                                                     #   164/166
LABEL $b                                                                        #   165/166
POPFRAME                                                                        #   166/166

