   Navod

 _________
 Komentar 
 ¯¯¯¯¯¯¯¯¯
Program vypisuje na stderr velke mnozstvi "odpadu", jedna se o hlasky ktere se 
nam nepodarilo odfiltrovat bez toho aby byla narusena struktura automatickeho
testu a vsech souboru, ktere se generuji, pri snaze o jejich odstranani dochazelo
k problemum generovani souboru .ifj, tak se za tuto malou neprijemnost omlouvame.

 _________
 Spousteni
 ¯¯¯¯¯¯¯¯¯
Tester se spousti prikazem */tester.sh arg1 arg2, kde arg1 je povinny a arg2 volitelny
nebo prikazem make test v souboru ktery obsahuje Makefile
odpovida jednomu z prepinacu, zatim mame 4 prepinace
1 argument:
-h vypise help
-d uvede slozku a jednotlive soubory do puvodniho stavu
-cesta_ke_kompileru spusti vsechny testy a vypise results + vygeneruje error soubory
vysledek testu je ulozen do souboru results.txt
2 argumenty:
-cesta_ke_kompileru _cislo_souboru_s_testy spusti pouze testy ve vami zadanem adresari
 ____________
 Tvorba testu
 ¯¯¯¯¯¯¯¯¯¯¯¯
Testy si ukladejte do jednotlivych slozek, slozka musi byt vzdy pojmenovana 
poradove_cislo-* a za pomlckou muze byt popis to je na vas ale cisla musi jit
za sebou 1 2 3 ... zavisi na tom postupne spousteni testu a testovany soubor 
pojmenovavenjte poradove_cislo.code a vysledek proti kteremu se to ma porovnat
poradove_cislo.correct zase plati stejna zasada cisla musi jit za seboun
V pripade ze vystup z interpretu nebude odpovidat souboru .correct zustanou
zachovany soubory .dif kde najdete diff .out a .correct, .ifj kde nejdete prepis
do instrukci IFJcode17 a .out kde najdete vystup z interpretu. V souboru result.txt
naleznete jestli test probehl uspesne + navratove kody C je navratovy kod kompileru
a I je navratovy kod interpretu
